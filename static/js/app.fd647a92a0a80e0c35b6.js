webpackJsonp([1],{"/wqO":function(n,r){n.exports={code:"200",data:{id:"编号_996.ICU",username:"bboyHan",phone:"182****9498",email:"bboyhan@yeah.net",job:"高级工程师",workplace:"北京",description:"balabala..."},msg:""}},"2WkH":function(n,r){},"2olK":function(n,r){},"4ANP":function(n,r){},"5IEw":function(n,r){n.exports='## 文章目录（Table of Contents）\r\n\r\n- [一、安装与配置](#一安装与配置)\r\n  - [1、下载安装](#1下载安装)\r\n  - [2、配置](#2配置)\r\n  - [3、测试](#3测试)\r\n  - [4、Hello World](#4HelloWorld)\r\n  - [5、IDE安装](#5IDE安装)\r\n  - [6、API](#6API)\r\n\r\n# 一、安装与配置\r\n\r\n## 1、下载安装\r\n\r\n官方下载链接：[https://golang.org/dl/](https://golang.org/dl/)\r\n\r\n如果官网打不开的朋友(需要墙)，我这里提供一个百度盘链接（windows 64版）：[下载](https://pan.baidu.com/s/1kTFwJu30EWRf0f4i87DIpQ)，提取码：ajys\r\n\r\n**使用源码安装方法：** (UNIX/Linux/Mac OS X/FreeBSD)\r\n\r\n```shell\r\n# 1.11\r\ntar -zxvf go1.11.linux-amd64.tar.gz\r\n\r\n# 1.12\r\ntar -zxvf go1.12.linux-amd64.tar.gz\r\n\r\n# 将解压后的目录放置在你所需的文件路径下(/usr/local/go)\r\n\r\n```\r\n\r\n## 2、配置\r\n\r\nUNIX/Linux/Mac OS X/FreeBSD环境添加PATH：\r\n\r\n```shell\r\n# 配置PATH\r\nexport PATH=$PATH:/usr/local/go/bin\r\n\r\n# 编译\r\nsource /etc/profile\r\n```\r\n\r\nWindow环境，计算机(右键) -> 属性 -> 高级系统设置 -> 环境变量 -> 修改PATH \r\n\r\n```shell\r\n# PATH添加\r\nxxxx;D:\\Go\\bin;\r\n```\r\n\r\n1. **GOROOT：** Go的安装路径\r\n2. **GOPATH：** 允许多个目录，当有多个目录时，请注意分隔符，多个目录的时候Windows是分号“;”，Linux系统是冒号“: ”\r\n\r\n**注：** $GOPATH目录约定有三个子目录\r\n- src：存放源代码(比如：.go .c .h .s等)\r\n- pkg：编译时生成的中间文件（比如：.a）\r\n- bin：编译后生成的可执行文件（为了方便，可以把此目录加入到 $PATH 变量中，如果有多个gopath，那么使用${GOPATH//://bin:}/bin添加所有的bin目录）\r\nGOBIN：Go文件中的bin目录\r\n\r\n## 3、测试\r\n\r\n假设我的go在window安装在了`D:\\go\\workspace`。打开cmd窗口，进入到此路径下(配置PATH后，在任意路径都可以使用)。\r\n\r\n```shell\r\n> go version\r\ngo version go1.11 windows/amd64\r\n```\r\n\r\n## 4、Hello World\r\n\r\n新建helloworld.go 文件（路径：C:\\go\\workspace\\src\\helloworld.go）\r\n\r\n```go\r\npackage main\r\n \r\nimport "fmt"\r\n \r\nfunc main() {\r\n    fmt.Printf("hello, world\\n")\r\n}\r\n```\r\n\r\n进到go目录下的src中，输入`go run helloworld.go`。\r\n\r\n```shell\r\n> cd C:\\go\\workspace\\src\\\r\n \r\n> go run helloworld.go\r\nhello,world\r\n```\r\n\r\n## 5、IDE安装\r\n\r\n比较流行的开发工具有：Sublime、VS Code、LiteIDE、GoLand。\r\n\r\n- Sublime下载地址：[http://www.sublimetext.com](http://www.sublimetext.com)\r\n- Goland下载地址：[https://www.jetbrains.com/go/](https://www.jetbrains.com/go/)\r\n- LiteIDE下载地址：[http://sourceforge.net/projects/liteide/files/](http://sourceforge.net/projects/liteide/files/)\r\n\r\n## 6、API\r\n\r\n开发者必备手册，地址：[https://golang.org/cmd/api/](https://golang.org/cmd/api/)\r\n\r\n连接不上官网的朋友，有一个本地查看文档的方式，如下：\r\n\r\n```shell\r\n> go help doc\r\nusage: go doc [-u] [-c] [package|[package.]symbol[.method]]\r\nDoc prints the documentation comments associated with the item identified by its\r\narguments (a package, const, func, type, var, or method) followed by a one-line\r\nsummary of each of the first-level items "under" that item (package-level\r\ndeclarations for a package, methods for a type, etc.).\r\nFlags:\r\n\t-c\r\n\t\tRespect case when matching symbols.\r\n\t-cmd\r\n\t\tTreat a command (package main) like a regular package.\r\n\t\tOtherwise package main\'s exported symbols are hidden\r\n\t\twhen showing the package\'s top-level documentation.\r\n\t-u\r\n\t\tShow documentation for unexported as well as exported\r\n\t\tsymbols and methods.\r\n```\r\n\r\n或者使用http，浏览器方式查看：\r\n\r\n```shell\r\n> godoc -http=:8080\r\n```\r\n\r\n\r\n'},"5TQl":function(n,r){},"6tdw":function(n,r){n.exports={code:"200",data:{token:"AHWqTUmwwL0VUSboPyqT6UGID6eN2oSXvJ_DCe0v71ayN2Vyn0MhxwbFCSdMcWvW",username:"bboyHan"},msg:""}},B9sE:function(n,r){},"BR+q":function(n,r){n.exports={code:"200",data:[{title:"一、Mysql的基本操作与数据类型",id:1,introduction:"1、连接数据库;2、库操作;3、表操作;4、数据操作;5、数据类型"},{title:"二、Linux环境安装Mysql",id:2,introduction:"将下载的文件上传至服务器上某一路径下(/usr/src/software/)，进行解压。"},{title:"一、Java的概念、安装与配置",id:3,introduction:"Java是由Sun Microsystems公司于1995年5月推出的Java面向对象程序设计语言和Java平台的总称。由James Gosling和同事们共同研发，并在1995年正式推出。"},{title:"二、Java的基础语法与规范",id:4,introduction:"首先，所有的Java程序，都必须要有一个称之为“主方法”的函数入口，这个入口便是public static void main(String []args) 方法（我们将它简称为main方法）。也就是说，要让一个Java程序运行起来，就必须通过main方法才可以执行一系列的操作与运算，最终达到目的需求。"},{title:"三、Java的进制、数据类型与内存分析",id:5,introduction:"我们都知道，在计算机里边，所有的一切都是以二进制01的形式进行表示。在计算机中，表示数据的最小单位，叫位（bit），也叫比特位。byte，叫做字节。"},{title:"四、Java的操作符与流程控制",id:6,introduction:"我们知道了程序用变量来表示数据，而操作符，顾名思义，就是来操作数据。在由操作符和数据所构成的表达式，被操纵的数据也被称为数据元。"},{title:"一、Go的安装与配置",id:7,introduction:"比较流行的开发工具有：Sublime、VS Code、LiteIDE、GoLand。"},{title:"二、Go的基础语法与规范",id:8,introduction:"我们在使用其它语言的情况，比如Java（本主是Java出身，0rz，以此为例），是有“包”这个概念的，其实，就可以简单的理解为是便于管理和组织所有的文件所使用的，比如java中常用的类String，它就隶属于“java.lang”包下的类。（当然，新手不理解也没有关系）。在Go当中，也是类似的概念，它将我们的go文件（文件的后缀名为“.go”）组织起来，可以方便进行归类、复用等。 "}],msg:""}},CMS8:function(n,r){},CNLw:function(n,r){n.exports={code:"200",data:{title:"",info:""},msg:""}},DfTy:function(n,r){},FDtd:function(n,r){n.exports='## 文章目录（Table of Contents）\r\n\r\n- [一、概念、安装与配置](#一概念安装与配置)\r\n  - [1、Java简介](#1java简介)\r\n  - [2、Java主要特性](#2java主要特性)\r\n  - [3、开发环境配置](#3开发环境配置)\r\n  - [4、第一个程序，HelloWorld](#4第一个程序helloworld)\r\n\r\n# 一、概念、安装与配置\r\n\r\n## 1、Java简介\r\n\r\nJava是由Sun Microsystems公司于1995年5月推出的Java面向对象程序设计语言和Java平台的总称。由James Gosling和同事们共同研发，并在1995年正式推出。\r\n\r\nJava分为三个体系：\r\n\r\n> **JavaSE (J2SE)**  —— Java 2 Platform Standard Edition，标准版\r\n> **JavaEE (J2EE)**   —— Java 2 Platform,Enterprise Edition，企业版\r\n> **JavaME (J2ME)** —— Java 2 Platform Micro Edition，微型版\r\n\r\n\r\n2005年6月，JavaOne大会召开，SUN公司公开Java SE 6。此时，Java的各种版本已经更名以取消其中的数字"2"：J2EE更名为`Java EE`, `J2SE`更名为`Java SE`，`J2ME`更名为`Java ME`。\r\n\r\n做过开发的朋友，或者对互联网开发有过了解的朋友可能会知道，Java作为编程语言，一直在各大公司中广泛使用。其实Java与其它语言相比，并没有什么技术上的优势。我们也会经常看到一些diss，说Java语言设计不如C#，对native的精确控制和灵活性不如C++。动态性、开发效率的简易性不如Ruby，Python，Node。在高并发领域又不如Erlang。中间应用层又远不如Go、Swift等。**既然这样，为什么Java如此备受青睐？那关于其本质的优势又是什么呢？**这依赖于Java的几大主要特性\r\n\r\n## 2、Java主要特性\r\n\r\n**a、入门简单，容易学习**\r\n\r\nJava语言的语法与C语言和C++语言相接近。另一方面，Java丢弃了C++中很少使用的、很难理解的、令人迷惑的那些特性，如操作符重载、多继承、自动的强制类型转换。特别地，Java语言不使用指针，而是引用。并提供了自动的垃圾收集（GC机制），使得程序员不必为内存管理而担忧。\r\n\r\n**b、面向对象设计**\r\n\r\n基于人的思维逻辑，Java提供了一套面向对象的语言设计，使得Java能够进行模块化式的开发。将程序中的逻辑以对象的形式呈现，具备对用户公开的特定功能或隐藏的私有属性，使得业务的实现能够简单化，增强代码的复用性。\r\n\r\n**c、开源，有强大的后援支持**\r\n\r\nJava经过多年的沉淀，拥有活跃的社区成员，并且有大量的第三方库，对软件的开发与生产效率的提升具备强大的后援保障。优秀的顶级项目，如Spring、Apache、Hadoop、Spack、Dubbo、RocketMQ......并且相关的IDE工具（Eclipse、IDEA、MyEclipse等等），使用也十分便捷。\r\n\r\n**d、安全、高性能、跨平台**\r\n\r\nJava属于强类型机制的语言，通常被用在网络环境中，而Java提供了异常处理、垃圾回收（GC）、安全机制保障等一系列健全的机制。并且Java编写的程序可以实现跨平台的特性，Java程序在Java平台上被编译为字节码格式，在运行时，Java平台中的Java解释器对这些字节码进行解释执行，执行过程中需要的类在联接阶段被载入到运行环境中。\r\n\r\n**e、发展迅猛**\r\n\r\nJava从1995年诞生，1997年社区成员超过10万人次，随后在1998年发布J2EE，在1999年发行三大版本（J2SE、J2EE、J2ME）到2006年底，先后发布了从1.3 - 1.6 的版本更新。2009年被Oracle公司收购，2011年7月28日，甲骨文发布 Java7.0 的正式版。截至2019年3月20日，Java已经发布了Java SE 12的版本更新。**但从9之后的版本为近几年的更新迭代，目前国内的大多数企业使用的java版本为Java 8**。\r\n\r\n\r\n## 3、开发环境配置\r\n以Window系统环境为例（IOS、Linux的朋友如有不适自行上网查阅~）\r\n\r\n**a、下载JDK：**[官网地址](http://www.oracle.com/technetwork/java/javase/downloads/index.html)\r\n\r\n选择与自己电脑相匹配的安装包下载即可（exe文件，可以一键安装），如`Windows x64/Window x86`等等。如果是下载zip包的朋友，需要在下载之后配置环境变量在进行使用即可。\r\n\r\n**b、配置环境变量（下载zip的情况）**\r\n\r\n安装完成后，右击`"我的电脑"`，点击`"属性"`，选择`"高级系统设置"`；选择`"高级"`选项卡，点击`"环境变量"`；（win10略有区别，大体上类似，找到`"环境变量"`），新建`PATH`，`JAVA_HOME`\r\n\r\n- I、PATH -> 添加 `%JAVA_HOME%\\bin;`\r\n\r\n注意配置PATH，不能把原先PATH里的值删除，否则可能会导致系统的未知错误，正确操作是在最前或最后添加，以`;`号隔开。\r\n\r\n- II、JAVA_HOME -> 添加 `C:\\Program Files (x86)\\Java\\jdk1.8.0_91`（你的jdk下载根路径）\r\n\r\n**c、测试是否安装成功**\r\n\r\n打开cmd窗口，输入`java -version`，如果出现版本号，证明安装正常。\r\n\r\n## 4、第一个程序，HelloWorld\r\n\r\n**a、创建一个HelloWorld.java文件，使用编辑器打开**\r\n``` java\r\npublic class HelloWorld {\r\n    public static void main(String []args) {\r\n        System.out.println("Hello World"); // 打印 Hello World\r\n    }\r\n}\r\n```\r\n\r\n**b、打开cmd窗口，进入该文件的所在位置，输入命令`javac HelloWorld.java`按回车键编译**\r\n\r\n**c、输入命令`java HellowWorld`便可以看到你的窗口中输出了`HelloWorld`。**\r\n\r\n'},HcqM:function(n,r){n.exports='## 文章目录（Table of Contents）\r\n\r\n- [三、进制、数据类型与内存分析](#三变量数据类型与内存分析)\r\n  - [1、字节与进制](#1字节与进制)\r\n  - [2、数据类型](#2数据类型)\r\n    - [2.1 内置数据类型](#21-内置数据类型)\r\n    - [2.2 引用数据类型](#22-引用数据类型)\r\n    - [2.3 数据类型与内存的关系](#23-数据类型与内存的关系)\r\n  - [3、内存分析（堆、栈、方法区）](#3内存分析堆栈方法区)\r\n    - [3.1 堆(Heap)](#31-堆Heap)  \r\n    - [3.2 栈(Stack)](#32-栈Stack)  \r\n    - [3.3 本地方法栈](#33-本地方法栈)  \r\n    - [3.4 方法区](#34-方法区)  \r\n    - [3.5 程序计数器](#35-程序计数器)  \r\n      \r\n# 三、进制、数据类型与内存分析\r\n\r\n先来看一些声明例子：\r\n```java\r\nint a, b, c;             // 声明三个int型整数：a、 b、c\r\nint d = 3, e = 4, f = 5; // 声明三个整数并赋予初值\r\nbyte z = 22;             // 声明并初始化 z\r\nString s = "bboyhan";    // 声明并初始化字符串 s\r\ndouble pi = 3.14159;     // 声明了双精度浮点型变量 pi\r\nchar x = \'x\';            // 声明变量 x 的值是字符 \'x\'。\r\n```\r\n\r\n## 1、字节与进制\r\n\r\n我们都知道，在计算机里边，所有的一切都是以二进制01的形式进行表示。在计算机中，表示数据的最小单位，叫位（bit），也叫比特位。`byte`，叫做字节。\r\n\r\n1byte（也可以表示为1B）=8bit，1KB=1024B。字节换算表如下：\r\n\r\n|换算公式|\r\n|---|\r\n|1KB（Kilobyte，千字节）=1024B= 10^3 B|\r\n|1MB（Megabyte，兆字节，百万字节，简称“兆”）=1024KB= 10^6 B|\r\n|1GB（Gigabyte，吉字节，十亿字节，又称“千兆”）=1024MB= 10^9 B|\r\n|1TB（Terabyte，万亿字节，太字节）=1024GB= 10^12 B|\r\n|1PB（Petabyte，千万亿字节，拍字节）=1024TB= 10^15 B|\r\n|1EB（Exabyte，百亿亿字节，艾字节）=1024PB= 10^18 B|\r\n|1ZB（Zettabyte，十万亿亿字节，泽字节）= 1024EB= 10^21 B|\r\n|1YB（Yottabyte，一亿亿亿字节，尧字节）= 1024ZB= 10^24 B|\r\n|1BB（Brontobyte，一千亿亿亿字节）= 1024YB= 10^27 B|\r\n|1NB（NonaByte，一百万亿亿亿字节） = 1024BB = 10^30 B|\r\n|1DB（DoggaByte，十亿亿亿亿字节） = 1024 NB = 10^33 B|\r\n\r\n由于数据在计算机中的表示，最终以二进制的形式存在，所以有时候使用二进制，可以更直观地解决问题。但你会发现二进制数太长了。比如int   类型占用4个字节，32位。\r\n\r\n比如100，用int类型的二进制数表达将是：0000 0000 0000 0000 0110 0100\r\n\r\n这样的表现形式从常人的理解来看，不易读懂也不直观。因此，C、C++、以及java中没有提供在代码直接写二进制数的方法。在Java中提供了八进制和十六进制的表现形式。\r\n\r\n**1、八进制表示**\r\n\r\n```shell\r\n# 表示方法：在进制数前面加一个零（0）。\r\n\r\n# 10进制的100(即 1*10^2+0*10^1+0*10^0 = 100)\r\nint a = 100;\r\n\r\n# 8进制的100(即 1*8^2+4*8^1+4*8^0 = 100)\r\nint a = 0144;\r\n```  \r\n\r\n**2、十六进制表示**\r\n\r\n```shell\r\n# 表示方法：在进制数前面加一个0x。\r\n\r\n# 10进制的100(即 1*10^2+0*10^1+0*10^0 = 100)\r\nint a = 100;\r\n\r\n# 16进制的100(即 6*16^1+4*16^0 = 100)\r\nint a = 0x64;\r\n```  \r\n\r\n\r\n## 2、数据类型\r\n\r\n我们在[上一篇](https://github.com/bboyHan/booknote/blob/master/java/%E4%BA%8C%E3%80%81%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B8%8E%E8%A7%84%E8%8C%83.md)中了解了“变量”的概念，现在就来深入理解一下。变量就是申请内存来存储值。也就是说，当创建变量的时候，需要在内存中申请空间。内存管理系统根据变量的类型为变量分配存储空间，分配的空间只能用来储存该类型数据。\r\n\r\n因此，通过定义不同类型的变量，可以在内存中储存整数、小数或者字符。**Java 分为两大数据类型：内置数据类型(也叫基本类型)、引用数据类型**\r\n\r\n+ **基本类型：** 简单数据类型是不能简化的、内置的数据类型、由编程语言本身定义，它表示了真实的数字、字符和整数。\r\n\r\n+ **引用数据类型：** Java语言本身不支持C++中的结构（struct）或联合（union）数据类型，它的复合数据类型一般都是通过类或接口进行构造，类提供了捆绑数据和方法的方式，同时可以针对程序外部进行信息隐藏。\r\n\r\n### 2.1 内置数据类型\r\n\r\nJava语言提供了八种基本类型。六种数字类型（四个整数型，两个浮点型），一种字符类型，还有一种布尔型。\r\n\r\n|类别| 类型 |说明|字节数|取值返回|默认值|\r\n|---|---|---|---|---|---|\r\n| 整数型  |byte|Java中最小的数据类型，在内存中占8位(bit)|1|-128~127|0|\r\n||short|短整型，在内存中占16位|2|-32768~32717|0|\r\n||int|整型，用于存储整数，在内在中占32位|4|-2147483648~2147483647|0|\r\n||long|长整型，在内存中占64位|8|-2^63~2^63-1|0L|\r\n|浮点型|float|单精度浮点型，在内存中占32位，即4个字节，用于存储带小数点的数字（与double的区别在于float类型有效小数点只有6~7位）|4|3.4e-45~1.4e38|0.0f|\r\n||double|双精度浮点型，用于存储带有小数点的数字，在内存中占64位|8|4.9e-324~1.8e308|0.0d|\r\n|字符型|char|字符型，用于存储单个字符，占16位，Unicode码，用单引号赋值|2|0~65535|\\`\\u0000`|\r\n|布尔型|boolean|布尔类型，占1个字节，用于判断真或假|1|仅有两个值，即true、false|false|\r\n\r\n\r\n**注：** 实际上，JAVA中还存在另外一种基本类型`void`，它也有对应的包装类 `java.lang.Void`，不过我们无法直接对它们进行操作。\r\n\r\n### 2.2 引用数据类型\r\n\r\n在Java中，引用类型的变量非常类似于C/C++的指针。引用类型指向一个对象，指向对象的变量是引用变量。**对象、数组都是引用数据类型。** 所有引用类型的默认值都是null。\r\n\r\n> User a = new User("bboyhan")，即a为引用变量，`new User("bboyhan")`为创建的一个对象实例，a变量指向这个对象。\r\n\r\n\r\n### 2.3 数据类型与内存的关系\r\n\r\nJava的数据类型定义之后进行内存分配，有1个前提条件，即确定变量的类型。确定了变量的类型，即确定了数据需分配内存空间的大小，数据在内存的存储方式。\r\n\r\n+ 基本数据类型：所有的内置数据类型不存在“引用”的概念，基本数据类型都是直接存储在内存中的内存栈上的，数据本身的值就是存储在栈空间里面\r\n\r\n+ 引用数据类型：引用类型继承于Object类（也是引用类型）都是按照Java里面存储对象的内存模型来进行数据存储的，使用Java内存堆和内存栈来进行这种类型的数据存储。简单地讲，“引用”是存储在有序的内存栈上的，而对象本身的值存储在内存堆上的。由此可见，不管何种引用类型的变量，他们引用的都是对象。\r\n\r\n## 3、内存分析（堆、栈、方法区）\r\n\r\nJava的程序运行，得益于JVM（Java虚拟机）。因此，在谈到Java的内存问题，其实指的是JVM的内存问题。首先，我们先来理解一下Java程序的执行过程：\r\n\r\n![java程序执行过程](https://github.com/bboyHan/booknote/blob/master/img/java_run_process.png)\r\n\r\n首先，Java源代码文件(.java后缀)会被Java编译器编译为字节码文件(.class后缀)，然后由JVM中的类加载器加载各个类的字节码文件，加载完毕之后，交由JVM执行引擎执行。在整个程序执行过程中，JVM会用一段空间来存储程序执行期间需要用到的数据和相关信息，这段空间一般被称作为Runtime Data Area（运行时数据区），也就是我们常说的JVM内存。因此，在Java中我们常常说到的内存管理就是针对这段空间进行管理（如何分配和回收内存空间）。\r\n\r\n**运行时数据区** 大致可分为：\r\n1. 堆(Heap)\r\n2. 栈(Stack)，也叫Java虚拟机栈\r\n3. 方法区(Method Area)\r\n4. 程序计数器(Program Counter Register)\r\n5. 本地方法栈(Native Method Stack)\r\n\r\n![运行时数据区](https://github.com/bboyHan/booknote/blob/master/img/java_runtime_data_area.png)\r\n\r\n### 3.1 堆（Heap）\r\n\r\n在HotSpot JVM 实现中Heap内存被“分代”管理。分割为：\r\n\r\n1. Heap Memory 堆内存\r\n\r\n堆内存是我们程序运行时可以申请的内存空间，用于存储程序运行时的数据信息。\r\n                \r\n2. Non Heap Memory 非堆内存\r\n\r\n> 除了堆内存区域用来存放存活(living)的数据，JVM 还需要尤其是类描述、元数据等更多信息。所以这些信息统一被存放在命名为Permanent generation(永久/常驻代)的区域。非堆内存其实就是JVM 留给自己用的，所以方法区、JVM 内部处理或优化所需的内存(如JIT编译后的代码缓存)、每个类结构(如运行时常数池、字段和方法数据)以及方法和构造方法的代码等都在非堆内存中。并且，非堆内存由JVM 管理，我们无法在程序中使用。\r\n\r\n> **Heap 是应用程序在运行期请求操作系统分配给自己的向高地址扩展的数据结构，是不连续的内存区域。由于从操作系统/JVM 管理的内存分配，所以在分配和销毁时都要占用时间，因此用堆的效率比较低。但是堆的优点在于：编译器不必知道要从堆里分配多少存储空间，也不必知道存储的数据要在堆里停留多长的时间。因此，用堆保存数据时会得到更大的灵活性。事实上，面向对象的多态性，堆内存分配是必不可少的，因为多态变量所需的存储空间只有在运行时创建了对象之后才能确定。所以堆内存最大的特点就是：堆允许程序在运行时动态地申请某个大小的内存空间。**\r\n\r\n> 在JVM 中，堆（Heap）是可供各条线程共享的运行时内存区域，也是供所有类实例和数组对象分配内存的区域。Java堆在虚拟机启动的时候就被创建，它存储了被自动内存管理系统（Automatic Storage Management System，也即是常说的“Garbage Collector（垃圾收集器）”）所管理的各种对象，这些受管理的对象无需，也无法显式地被销毁。Java堆的容量可以是固定大小的，也可以随着程序执行的需求动态扩展，并在不需要过多空间时自动收缩。Java堆所使用的内存亦不需要保证是连续的。\r\n        \r\n> JVM 实现应当提供给程序员或者最终用户调节Java堆初始容量的手段，对于可以动态扩展和收缩Java堆来说，则应当提供调节其最大、最小容量的手段。在Java 中，要求创建一个对象时，只需用new 关键字及相关的代码即可。执行这些代码时，JVM 会在堆内存中自动进行数据存储空间的分配。\r\n\r\n### 3.2 栈（Stack）\r\n\r\nJava虚拟机栈（Java Virtual Machine Stacks），该区域属于线程私有，它的生命周期也与线程相同。虚拟机栈描述的是Java方法执行的内存模型：每个方法被执行的时候都会同时创建一个栈帧，栈它是用于支持续虚拟机进行方法调用和方法执行的数据结构。对于执行引擎来讲，活动线程中，只有栈顶的栈帧是有效的，称为当前栈帧，这个栈帧所关联的方法称为当前方法，执行引擎所运行的所有字节码指令都只针对当前栈帧进行操作。栈帧用于存储局部变量表、操作数栈、动态链接、方法返回地址和一些额外的附加信息。在编译程序代码时，栈帧中需要多大的局部变量表、多深的操作数栈都已经完全确定了，并且写入了方法表的Code属性之中。因此，一个栈帧需要分配多少内存，不会受到程序运行期变量数据的影响，而仅仅取决于具体的虚拟机实现。\r\n\r\n在Java虚拟机规范中，对这个区域规定了两种异常情况：\r\n\r\n1. 如果线程请求的栈深度大于虚拟机所允许的深度，将抛出StackOverflowError异常。\r\n2. 如果虚拟机在动态扩展栈时无法申请到足够的内存空间，则抛出OutOfMemoryError异常。\r\n\r\n这两种情况存在着一些互相重叠的地方：当栈空间无法继续分配时，到底是内存太小，还是已使用的栈空间太大，其本质上只是对同一件事情的两种描述而已。在单线程的操作中，无论是由于栈帧太大，还是虚拟机栈空间太小，当栈空间无法分配时，虚拟机抛出的都是StackOverflowError异常，而不会得到OutOfMemoryError异常。而在多线程环境下，则会抛出OutOfMemoryError异常。\r\n\r\n![java程序执行过程](https://github.com/bboyHan/booknote/blob/master/img/java_stack.png)\r\n\r\nJVM为每个新创建的线程都分配一个堆栈.也就是说,对于一个Java程序来说，它的运行就是通过对堆栈的操作来完成的。JVM对堆栈只进行两种操作:以帧为单位的压栈和出栈操作（FILO，先进后出，这里不理解的朋友后续我会在数据结构篇中细讲）。\r\n\r\n1. 局部变量表（Local Variable Table），用来存储方法中的局部变量（包括在方法中声明的非静态变量以及函数形参）。对于基本数据类型的变量，则直接存储它的值，对于引用类型的变量，则存的是指向对象的引用。局部变量表的大小在编译器就可以确定其大小了，因此在程序执行期间局部变量表的大小是不会改变的。\r\n2. 操作数栈（Operand Stack），数据运算的地方，可理解为java虚拟机栈中的一个用于计算的临时数据存储区。存储的数据与局部变量表一致含int、long、float、double、reference、returnType，操作数栈中byte、short、char压栈前(bipush)会被转为int。大多数指令都在操作数栈弹栈运算，然后将结果压栈。\r\n3. 动态链接（Dynamic Linking），指向运行时常量池的引用，因为在方法执行的过程中有可能需要用到类中的常量，所以必须要有一个引用指向运行时常量。\r\n4. 方法返回地址（Return Address），当一个方法执行后，返回到方法被调用的位置，确保程序继续执行。\r\n5. 其它附加信息\r\n\r\n**补充：**\r\n1. 局部变量表，用于存放方法参数和方法内部定义的局部变量。在编译期由Code属性中的max_locals确定局部变量表的大小。 局部变量表的容量以变量槽(Variable Slot)为最小单位。虚拟机规范中并没有明确指明一个Slot应占用的内存空间大小,只是很有导向性地说到每个Slot都应该能存放一个boolean、byte、char、short、int、float、reference或returnAddress类型的数据,这8种数据类型,都可以使用32位或更小的物理内存来存放,但这种描述与明确指出“每个Slot占用32位长度的内存空间”是有一些差别的,它允许Slot的长度可以随着处理器、操作系统或虚拟机的不同而发生变化。只要保证即使在64位虚拟机中使用了64位的物理内存空间去实现一个Slot,虚拟机仍要使用对齐和补白的手段让Slot在外观上看起来与32位虚拟机中的一致。\r\n2. 关于操作数栈想更深入了解的朋友，可以网上查阅相关的操作指令结合反编译class文件进行解读，反编译指令：`javap -c xxx.class` \r\n3. 在概念模型中,两个栈帧作为虚拟机栈的元素,是完全相互独立的。但在大多虚拟机的实现里都会做一些优化处理,令两个栈帧出现一部分重叠。让下面栈帧的部分操作数栈与上面栈帧的部分局部变量表重叠在一起,这样在进行方法调用时就可以共用一部分数据,无须进行额外的参数复制传递\r\n4. 当一个方法开始执行后,只有两种方式可以退出，一种是遇到方法返回的字节码指令；一种是遇见异常，并且这个异常没有在方法体内得到处理。无论采用何种退出方式,在方法退出之后,都需要返回到方法被调用的位置,程序才能继续执行,方法返回时可能需要在栈帧中保存一些信息,用来帮助恢复它的上层方法的执行状态。一般来说,方法正常退出时,调用者的PC计数器的值可以作为返回地址,栈帧中很可能会保存这个计数器值。而方法异常退出时,返回地址是要通过异常处理器表来确定的,栈帧中一般不会保存这部分信息。\r\n\r\n### 3.3 本地方法栈\r\n\r\n本地方法栈与Java栈的作用和原理非常相似。区别只不过是Java栈是为执行Java方法服务的，而本地方法栈则是为执行本地方法（Native Method）服务的。在JVM规范中，并没有对本地方发展的具体实现方法以及数据结构作强制规定，虚拟机可以自由实现它。\r\n\r\n### 3.4 方法区\r\n\r\n方法区在JVM中也是一个非常重要的区域，它与堆一样，是被线程共享的区域。在方法区中，存储了每个类的信息（包括类的名称、方法信息、字段信息）、静态变量、常量以及编译器编译后的代码等。\r\n\r\n|方法区的组成|说明|\r\n|---|---|\r\n|类型信息|类型的完整有效名（包含直接父类），类型的修饰符，这个类型直接接口的一个有序列表等。|\r\n|常量池(Constant Pool) |jvm为每个已加载的类型都维护一个常量池。常量池就是这个类型用到的常量的一个有序集合，包括实际的常量(string,integer, 和floating point常量)和对类型，域和方法的符号引用。池中的数据项象数组项一样，是通过索引访问的。因为常量池存储了一个类型所使用到的所有类型，域和方法的符号引用，所以它在java程序的动态链接中起了核心的作用。|\r\n|域(Field)信息|jvm必须在方法区中保存类型的所有域的相关信息以及域的声明顺序，域的相关信息包括：域名、域类型、域修饰符(public, private, protected，static，final，volatile, transient的某个子集) |\r\n|方法(Method)信息|同域信息一样包括声明顺序，包括：方法名，方法的返回类型(或 void)，方法参数的数量和类型(有序的) ，异常表，方法的修饰符(public, private, protected, static, final, synchronized, native, abstract的一个子集)除了abstract和native方法外，其他还有保存方法的字节码(bytecodes)操作数栈和方法栈帧的局部变量区的大小|\r\n|类变量|类变量被类的所有实例共享，即使没有类实例时你也可以访问它。这些变量只与类相关，所以在方法区中，它们成为类数据在逻辑上的一部分。在jvm使用一个类之前，它必须在方法区中为每个non-final类变量分配空间。|\r\n|对类加载器的引用|如果一个类型是由用户类加载器加载的，那么jvm会将这个类加载器的一个引用作为类型信息的一部分保存在方法区中。|\r\n|除了常量外的所有静态(static)变量|—|\r\n|其它|以上例子并不全，感兴趣的朋友可以继续深入研究，欢迎指正、探讨交流|\r\n\r\n**补充：**\r\n1. 在java源代码中，完整有效名由类的所属包名称加一个"."，再加上类名组成。例如，类Object的所属包为java.lang，那它的完整名称为java.lang.Object，但在类文件里，所有的"."都被斜杠“/”代替，就成为java/lang/Object。完整有效名在方法区中的表示根据不同的实现而不同。\r\n2. 常量池(Constant Pool) ，是每一个类或接口的常量池的运行时表示形式，在类和接口被加载到JVM后，对应的运行时常量池就被创建出来。当然并非Class文件常量池中的内容才能进入运行时常量池，在运行期间也可将新的常量放入运行时常量池中，比如String的intern方法。\r\n\r\n### 3.5 程序计数器\r\n\r\n程序计数器（Program Counter Register），也有称作为PC寄存器，是一个记录着当前线程所执行的字节码的行号指示器。程序计数器是指CPU中的寄存器，它保存的是程序当前执行的指令的地址（也可以说保存下一条指令的所在存储单元的地址），当CPU需要执行指令时，需要从程序计数器中得到当前需要执行的指令所在存储单元的地址，然后根据得到的地址获取到指令，在得到指令之后，程序计数器便自动加1或者根据转移指针得到下一条指令的地址，如此循环，直至执行完所有的指令。\r\n\r\n在JVM中，多线程是通过线程轮流切换来获得CPU执行时间的，因此，在任一具体时刻，一个CPU的内核只会执行一条线程中的指令，因此，为了能够使得每个线程都在线程切换后能够恢复在切换之前的程序执行位置，每个线程都需要有自己独立的程序计数器，并且不能互相被干扰，否则就会影响到程序的正常执行次序。因此，可以说程序计数器是每个线程所私有的。\r\n\r\n**补充：** \r\n1. 在JVM规范中规定，如果线程执行的是非native方法，则程序计数器中保存的是当前需要执行的指令的地址；\r\n2. 执行native本地方法时，程序计数器的值为空（Undefined）。因为native方法是java通过JNI直接调用本地C/C++库，可以近似的认为native方法相当于C/C++暴露给java的一个接口，java通过调用这个接口从而调用到C/C++方法。由于该方法是通过C/C++而不是java进行实现。那么自然无法产生相应的字节码，并且C/C++执行时的内存分配是由自己语言决定的，而不是由JVM决定的。\r\n3. 如果线程执行的是native方法，则程序计数器中的值是undefined。由于程序计数器中存储的数据所占空间的大小不会随程序的执行而发生改变，因此，对于程序计数器是不会发生内存溢出现象(OutOfMemory)的。\r\n\r\n\r\n'},IEC5:function(n,r){n.exports="## 文章目录（Table of Contents）\r\n\r\n- [一、基本操作与数据类型](#一基本操作与数据类型)\r\n  - [1、连接数据库](#1连接数据库)\r\n  - [2、库操作](#2库操作)\r\n  - [3、表操作](#3表操作)\r\n  - [4、数据操作](#4数据操作)\r\n  - [5、数据类型](#5数据类型)\r\n\r\n# 一、基本操作与数据类型\r\n    \r\n## 1、连接数据库\r\n\r\n1.1 连接\r\n```shell\r\n# 使用命令行连接\r\n\r\n$> mysql -u root -p\r\nEnter password:******\r\n\r\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\r\nYour MySQL connection id is 1823465 to server version: 5.x.x\r\n\r\nType 'help;' or '\\h' for help. Type '\\c' to clear the buffer.\r\n\r\nmysql>\r\n \r\n```\r\n\r\n1.2 退出\r\n```shell\r\n$> exit\r\nBye\r\n```\r\n\r\n## 2、库操作\r\n\r\n2.1 创建数据库\r\n```shell\r\ncreate database 数据库名;\r\n\r\ncreate database bboyhan_db;\r\n```\r\n2.2 选择/使用数据库\r\n```shell\r\nuse 数据库名;\r\n\r\nuse bboyhan_db;\r\n```\r\n2.3 删除数据库\r\n```shell\r\ndrop database 数据库名;\r\n\r\ndrop database bboyhan_db;\r\n```\r\n2.4 查询数据库列表\r\n```shell\r\nshow databases;\r\n```\r\n\r\n## 3、表操作\r\n\r\n3.1 创建数据表\r\n```shell\r\nCREATE TABLE 数据表名 (字段名 字段类型);\r\n\r\nCREATE TABLE `tb_user`(\r\n   `id` INT UNSIGNED AUTO_INCREMENT,\r\n   `name` VARCHAR(100) NOT NULL,\r\n   `introduction` VARCHAR(40) NOT NULL,\r\n   `create_time` DATE,\r\n   PRIMARY KEY ( `id` )\r\n)ENGINE=InnoDB DEFAULT CHARSET=utf8;\r\n```\r\n\r\n3.2 删除数据表\r\n```shell\r\nDROP TABLE 数据表名 ;\r\n\r\nDROP TABLE tb_user ;\r\n```\r\n\r\n## 4、数据操作\r\n\r\n4.1 增加\r\n```shell\r\nINSERT INTO table_name ( field1, field2,...fieldN ) \r\nVALUES \r\n( value1, value2,...valueN );\r\n\r\nINSERT INTO user_tb (name, introdution, create_time)\r\nVALUES\r\n(\"bboyhan\", \"我是一名高级工程师\", NOW());\r\n```\r\n4.2 删除\r\n```shell\r\nDELETE FROM table_name [WHERE Clause];\r\n\r\nDELETE FROM user_tb WHERE id=1;\r\n```\r\n4.3 修改\r\n```shell\r\nUPDATE table_name SET field1=new-value1, field2=new-value2\r\n[WHERE Clause];\r\n\r\nUPDATE user_tb SET name='bboyHan' WHERE id=1;\r\n```\r\n4.4 查询\r\n```shell\r\nSELECT field1, field2,...fieldN FROM table_name1, table_name2...\r\n[WHERE condition1 [AND [OR]] condition2.....\r\n\r\nSELECT * from user_tb WHERE name='bboyHan';\r\n```\r\n\r\n## 5、数据类型\r\n\r\n> MySQL支持多种类型，大致可以分为三类：数值、日期/时间和字符串(字符)类型。\r\n\r\n5.1 数值类型\r\n\r\n|类型\t|大小\t|范围（有符号）\t|范围（无符号）|用途|\r\n|---|-----|-----|-----|-----|\r\n|TINYINT\t|1 字节\t|(-128，127)\t|(0，255)|\t小整数值|\r\n|SMALLINT\t|2 字节|\t(-32 768，32 767)|\t(0，65 535)\t|大整数值|\r\n|MEDIUMINT\t|3 字节\t|(-8 388 608，8 388 607)\t|(0，16 777 215)\t|大整数值|\r\n|INT或INTEGER|\t4 字节|\t(-2 147 483 648，2 147 483 647)\t|(0，4 294 967 295)\t大整数值\r\n|BIGINT|\t8 字节\t|(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)\t|(0，18 446 744 073 709 551 615)|\t极大整数值|\r\n|FLOAT\t|4 字节\t|(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)\t|0，(1.175 494 351 E-38，3.402 823 466 E+38)\t|单精度、浮点数值|\r\n|DOUBLE\t|8 字节|\t(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)\t|0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)\t|双精度、浮点数值\r\n|DECIMAL\t|对DECIMAL(M,D) ，如果M>D，为M+2否则为D+2\t|依赖于M和D的值|\t依赖于M和D的值\t|小数值|\r\n\r\n5.2 日期/时间类型\r\n\r\n|类型\t|大小(字节)|\t范围|\t格式\t|用途|\r\n|---|---|---|---|---|\r\n|DATE\t|3\t|1000-01-01/9999-12-31\t|YYYY-MM-DD|\t日期值|\r\n|TIME\t|3\t|'-838:59:59'/'838:59:59'\t|HH:MM:SS|\t时间值或持续时间|\r\n|YEAR\t|1\t|1901/2155\t|YYYY\t|年份值|\r\n|DATETIME|\t8\t|1000-01-01 00:00:00/9999-12-31 23:59:59\t|YYYY-MM-DD HH:MM:SS\t|混合日期和时间值|\r\n|TIMESTAMP\t|4\t|1970-01-01 00:00:00/2038|结束时间是第 2147483647 秒，北京时间 2038-1-19 11:14:07，格林尼治时间 2038年1月19日 凌晨 03:14:07|YYYYMMDD HHMMSS|\t混合日期和时间值，时间戳|\r\n\r\n5.3 字符串类型\r\n\r\n|类型\t|大小\t|用途|\r\n|---|---|---|\r\n|CHAR\t|0-255字节\t|定长字符串|\r\n|VARCHAR\t|0-65535 字节|\t变长字符串|\r\n|TINYBLOB|\t0-255字节\t|不超过 255 个字符的二进制字符串|\r\n|TINYTEXT|\t0-255字节\t|短文本字符串|\r\n|BLOB\t|0-65 535字节\t|二进制形式的长文本数据|\r\n|TEXT\t|0-65 535字节\t|长文本数据|\r\n|MEDIUMBLOB\t|0-16 777 215字节\t|二进制形式的中等长度文本数据|\r\n|MEDIUMTEXT|\t0-16 777 215字节|\t中等长度文本数据|\r\n|LONGBLOB|\t0-4 294 967 295字节\t|二进制形式的极大文本数据|\r\n|LONGTEXT\t|0-4 294 967 295字节|\t极大文本数据|"},KLgT:function(n,r){n.exports="## 文章目录（Table of Contents）\r\n\r\n- [二、Linux环境安装Mysql](#二Linux环境安装Mysql)\r\n  - [1、下载解压](#1下载解压)\r\n  - [2、安装](#2安装)\r\n  - [3、使用](#3使用)\r\n  \r\n# 二、Linux环境安装Mysql\r\n\r\n## 1、下载解压\r\n\r\n官方下载链接：[https://dev.mysql.com/downloads/mysql/5.7.html#downloads](https://dev.mysql.com/downloads/mysql/5.7.html#downloads)\r\n\r\n将下载的文件上传至服务器上某一路径下(/usr/src/software/)，进行解压。\r\n\r\n```shell\r\ntar -zxvf mysql-5.6.44-linux-glibc2.12-i686.tar.gz\r\n\r\n# 重命名\r\nmv mysql-5.6.44-linux-glibc2.12-i686 mysql\r\n```\r\n\r\n## 2、安装\r\n\r\n### 2.1 添加用户和用户组mysql\r\n\r\n```shell\r\n# 添加用户组 mysql\r\ngroupadd mysql\r\n\r\n# 添加用户 mysql\r\nuseradd -g mysql mysql\r\n```\r\n\r\n### 2.2 创建data文件夹，并赋予mysql用户权限\r\n\r\n```shell\r\n# 路径自己定义(/usr/src/data)\r\nmkdir data\r\n\r\n# 赋权限\r\nchown -R mysql:mysql data\r\n```\r\n\r\n### 2.3 初始化\r\n\r\n```shell\r\n# 去往路径，你的mysql路径(/usr/src/mysql)\r\n./scripts/mysql_install_db --user=mysql \\ \r\n--datadir=/usr/src/data \\\r\n--basedir=/usr/src/mysql\r\n\r\n# 复制脚本(/usr/src/mysql)\r\ncp support-files/mysql.server /etc/init.d/mysqld\r\n\r\n# 权限设置\r\nchmod 755 /etc/init.d/mysqld\r\n# 复制my.cnf\r\ncp support-files/my-default.cnf /etc/my.cnf\r\n```\r\n\r\n### 2.4 修改配置\r\n\r\n```shell\r\n# 将之前设置的datadir、basedir路径写入\r\n\r\n# my.cnf\r\nvim /etc/my.cnf\r\n\r\n[mysqld]\r\n\r\n# Remove leading # and set to the amount of RAM for the most important data\r\n# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.\r\n# innodb_buffer_pool_size = 128M\r\n\r\n# Remove leading # to turn on a very important data integrity option: logging\r\n# changes to the binary log between backups.\r\n# log_bin\r\n\r\n# These are commonly set, remove the # and set as required.\r\n# basedir = .....\r\nbasedir = /usr/src/mysql\r\n# datadir = .....\r\ndatadir = /usr/src/data\r\n# port = .....\r\n# server_id = .....\r\n# socket = .....\r\n\r\n:wq\r\n```\r\n\r\n```shell\r\nvim /etc/init.d/mysqld\r\n\r\n# If you install MySQL on some other places than /usr/local/mysql, then you\r\n# have to do one of the following things for this script to work:\r\n#\r\n# - Run this script from within the MySQL installation directory\r\n# - Create a /etc/my.cnf file with the following information:\r\n#   [mysqld]\r\n#   basedir=<path-to-mysql-installation-directory>\r\n# - Add the above to any other configuration file (for example ~/.my.ini)\r\n#   and copy my_print_defaults to /usr/bin\r\n# - Add the path to the mysql-installation-directory to the basedir variable\r\n#   below.\r\n#\r\n# If you want to affect other MySQL variables, you should make your changes\r\n# in the /etc/my.cnf, ~/.my.cnf or other MySQL configuration files.\r\n\r\n# If you change base dir, you must also change datadir. These may get\r\n# overwritten by settings in the MySQL configuration files.\r\n\r\nbasedir=/usr/src/mysql\r\ndatadir=/home/mysql/data\r\n\r\n# Default value, in seconds, afterwhich the script should timeout waiting\r\n# for server start. \r\n# Value here is overriden by value in my.cnf. \r\n# 0 means don't wait at all\r\n# Negative numbers mean to wait indefinitely\r\n\r\n:wq\r\n```\r\n\r\n### 2.5 启动服务\r\n\r\n```shell\r\n# 启动\r\nservice mysqld start\r\n\r\n# 查看状态\r\nservice mysqld status\r\n\r\n# 停止\r\nservice mysqld stop\r\n```\r\n\r\n### 2.6 配置全局使用\r\n\r\n```shell\r\n# 添加\r\nexport PATH=$PATH:/usr/src/mysql/bin\r\n\r\n# 编译\r\nsouce /etc/profile\r\n```\r\n\r\n## 3、使用\r\n\r\n## 3.1 进入数据库\r\n\r\n```shell\r\n# mysql/bin\r\nmysql\r\n\r\n# 查看数据库\r\nshow databases;\r\n\r\n# 选择mysql\r\nuse mysql\r\n```\r\n\r\n## 3.2 创建用户，设置密码\r\n\r\n```shell\r\n# CREATE USER 'username'@'host' IDENTIFIED BY 'password';\r\n\r\nCREATE USER 'bboyhan'@'localhost' IDENTIFIED BY '123456';\r\n```\r\n\r\n## 3.3 授权\r\n\r\n```shell\r\n# 授权查询、新增权限\r\nGRANT SELECT, INSERT ON test.user TO 'bboyhan'@'%';\r\n\r\n# 授权所有权限\r\nGRANT ALL ON *.* TO 'pig'@'%';\r\n\r\n# 使授权的用户能给其它用户授权:\r\nGRANT ALL ON test.tablename TO \\\r\n'bboyhan'@'host' WITH GRANT OPTION;\r\n\r\n# 更新上述设置\r\nflush privileges;\r\n```\r\n\r\n**注：**\r\n%表示允许外网访问。可能有些朋友设置了%之后，发现外网或者第三方工具在连接时被拒绝访问，可能出现的问题是防火墙未开放。\r\n\r\n```shell\r\n# 开放防火墙端口\r\nvim /etc/sysconfig/iptables\r\n\r\n# 授权开放端口(3306)\r\n-A INPUT -m state --state NEW -m \\ \r\ntcp -p tcp –dport 3306 -j ACCEPT\r\n\r\n# 重启防火墙\r\nservice iptables restart\r\n```"},MMa0:function(n,r,t){n.exports=t.p+"static/img/qrmine.607f53a.png"},NHnr:function(n,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var e={};t.d(e,"changeUser",function(){return d});var a={};t.d(a,"currentUser",function(){return u}),t.d(a,"isLogin",function(){return m});var o={};t.d(o,"userToken",function(){return h}),t.d(o,"username",function(){return v}),t.d(o,"lougout",function(){return f});var i=t("//Fk"),s=t.n(i),l=t("7+uW"),c=t("NYxO"),d=function(n,r){var t=n.commit;t("username",r.username),t("userToken",r.token)},u=function(n){return n.currentUser},m=function(n){return n.isLogin},h=function(n,r){n.token=r||null},v=function(n,r){r?(n.currentUser=r,n.isLogin=!0):null==user&&(sessionStorage.setItem("username",null),sessionStorage.setItem("userToken",""),n.currentUser=null,n.isLogin=!1,n.token="")},f=function(n){sessionStorage.clear(),n.currentUser=null,n.token=null,n.isLogin=!1};l.default.use(c.a);var p={currentUser:null,isLogin:!1,token:sessionStorage.getItem("userToken")?sessionStorage.getItem("userToken"):""},g=new c.a.Store({actions:e,getters:a,state:p,mutations:o}),b={render:function(){var n=this.$createElement,r=this._self._c||n;return r("div",{attrs:{id:"app"}},[this.isRouterAlive?r("router-view"):this._e()],1)},staticRenderFns:[]};var y=t("VU/8")({name:"App",provide:function(){return{reload:this.reload}},data:function(){return{isRouterAlive:!0}},methods:{reload:function(){this.isRouterAlive=!1,this.$nextTick(function(){this.isRouterAlive=!0})}}},b,!1,function(n){t("2WkH")},null,null).exports,M=t("/ocq"),w={data:function(){return{tabIndex:this.$route.path,navBarFixed:null}},inject:["reload"],computed:{isLogin:function(){return sessionStorage.getItem("username")&&sessionStorage.getItem("userToken")?this.$store.commit("userToken",sessionStorage.getItem("userToken")):this.$store.commit("userToken",null),this.$store.getters.isLogin}},methods:{handleSelect:function(n,r){console.log(n,r)},logout:function(){this.$store.commit("lougout"),this.reload()},watchScroll:function(){var n=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop;this.navBarFixed=n>59}},mounted:function(){window.addEventListener("scroll",this.watchScroll)}},E={render:function(){var n=this,r=n.$createElement,e=n._self._c||r;return e("div",{staticClass:"header-tab",class:{headerTab:n.navBarFixed}},[e("img",{staticClass:"tab-left",attrs:{src:t("eOq7")}}),n._v(" "),e("div",{staticClass:"tab-right"},[e("el-menu",{directives:[{name:"show",rawName:"v-show",value:!n.isLogin,expression:"!isLogin"}],attrs:{router:"","default-active":n.tabIndex,mode:"horizontal"},on:{select:n.handleSelect}},[e("el-menu-item",{attrs:{index:"/home"}},[n._v("首页")]),n._v(" "),e("el-menu-item",{attrs:{index:"/login"}},[n._v("登录")])],1),n._v(" "),e("el-menu",{directives:[{name:"show",rawName:"v-show",value:n.isLogin,expression:"isLogin"}],attrs:{router:"","default-active":n.tabIndex,mode:"horizontal"},on:{select:n.handleSelect}},[e("el-menu-item",{attrs:{index:"/user"}},[e("img",{staticClass:"avatar",attrs:{src:t("zQrT")}}),e("span",{staticClass:"nickname"},[n._v("bboyHan")])]),n._v(" "),e("el-menu-item",{on:{click:n.logout}},[n._v("退出")])],1)],1)])},staticRenderFns:[]};var x=t("VU/8")(w,E,!1,function(n){t("T4TL")},null,null).exports,S={menu:[{index:"1",icon:"el-icon-news",name:"技术典当",children:[{id:"1",router:"/article",name:"技术杂文",children:[]},{id:"2",router:"/share",name:"资源分享",children:[]},{id:"7",router:"/dataview",name:"数据分析",children:[]}]},{index:"2",icon:"el-icon-service",name:"倾听生活",children:[{id:"3",router:"/markwall",name:"过往印记",children:[]},{id:"4",router:"/a",name:"美妙声乐",children:[]}]},{index:"3",icon:"el-icon-menu",name:"配置管理",children:[{id:"5",router:"/user",name:"个人中心",children:[]},{id:"6",router:"/join",name:"加入我们",children:[]}]}]},_={data:function(){return{menu:S.menu}},computed:{onRoutes:function(){return this.$route.path.replace(/\s\S/,"")}},methods:{handleOpen:function(n,r){},handleClose:function(n,r){},redirectMenu:function(n){return console.log(n),"/article"!==n&&"/markwall"!==n&&"/user"!==n&&"/join"!==n&&"/share"!==n&&"/dataview"!==n}}},F={render:function(){var n=this,r=n.$createElement,t=n._self._c||r;return t("div",[t("div",{staticClass:"container-menu"},[t("el-row",[t("el-col",{attrs:{span:12}},[t("el-menu",{staticClass:"menu-detail",attrs:{"default-active":n.onRoutes,router:"","active-text-color":"#808080","background-color":"#ffffff",mode:"vertical","menu-trigger":"click"},on:{open:n.handleOpen,close:n.handleClose}},n._l(n.menu,function(r,e){return t("el-submenu",{key:e,attrs:{index:r.index}},[t("template",{slot:"title"},[t("i",{class:r.icon}),n._v(n._s(r.name)+"\n            ")]),n._v(" "),t("el-menu-item-group",n._l(r.children,function(r,e){return t("el-menu-item",{key:e,attrs:{index:r.router,disabled:n.redirectMenu(r.router)}},[n._v(n._s(r.name)+"\n\n              ")])}),1)],2)}),1)],1)],1)],1)])},staticRenderFns:[]};var C=t("VU/8")(_,F,!1,function(n){t("i5HF")},null,null).exports,J={components:{HeaderTab:x,MenuTab:C}},A={render:function(){var n=this.$createElement,r=this._self._c||n;return r("div",[r("header-tab"),this._v(" "),r("div",[r("menu-tab")],1),this._v(" "),r("div",[r("div",{staticClass:"container-main"},[r("router-view")],1)])],1)},staticRenderFns:[]};var T=t("VU/8")(J,A,!1,function(n){t("b4vH")},null,null).exports,k=t("XLwt"),L=t.n(k),I={markwall:{title:{link:"https://github.com/bboyHan"},tooltip:{show:!0},series:[{name:"Google Trends",type:"wordCloud",size:["50%","50%"],textRotation:[0,45,90,-45],textPadding:0,autoSize:{enable:!0,minSize:14},data:[{name:"Sam S Club",value:1e4,itemStyle:{normal:{color:"#3e59f2"}}},{name:"Macys",value:6181,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Amy Schumer",value:4386,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Jurassic World",value:4055,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Charter Communications",value:2467,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Chick Fil A",value:2244,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Planet Fitness",value:1898,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Pitch Perfect",value:1484,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Express",value:1112,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Home",value:965,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Johnny Depp",value:847,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Lena Dunham",value:582,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Lewis Hamilton",value:555,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"KXAN",value:550,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Mary Ellen Mark",value:462,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Farrah Abraham",value:366,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Rita Ora",value:360,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Serena Williams",value:282,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"NCAA baseball tournament",value:273,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}},{name:"Point Break",value:265,itemStyle:{normal:{color:"rgb("+[Math.round(160*Math.random()),Math.round(160*Math.random()),Math.round(160*Math.random())].join(",")+")"}}}]}]},meter:{tooltip:{formatter:"{a} <br/>{c} {b}"},toolbox:{show:!0,feature:{mark:{show:!0},restore:{show:!1},saveAsImage:{show:!1}}},series:[{name:"速度",type:"gauge",z:3,min:0,max:220,splitNumber:11,axisLine:{lineStyle:{width:10}},axisTick:{length:15,lineStyle:{color:"auto"}},splitLine:{length:20,lineStyle:{color:"auto"}},title:{textStyle:{fontWeight:"bolder",fontSize:20,fontStyle:"italic"}},detail:{textStyle:{fontWeight:"bolder"}},data:[{value:40,name:"km/h"}]},{name:"转速",type:"gauge",center:["25%","55%"],radius:"50%",min:0,max:7,endAngle:45,splitNumber:7,axisLine:{lineStyle:{width:8}},axisTick:{length:12,lineStyle:{color:"auto"}},splitLine:{length:20,lineStyle:{color:"auto"}},pointer:{width:5},title:{offsetCenter:[0,"-30%"]},detail:{textStyle:{fontWeight:"bolder"}},data:[{value:1.5,name:"x1000 r/min"}]},{name:"油表",type:"gauge",center:["75%","50%"],radius:"50%",min:0,max:2,startAngle:135,endAngle:45,splitNumber:2,axisLine:{lineStyle:{color:[[.2,"#ff4500"],[.8,"#48b"],[1,"#228b22"]],width:8}},axisTick:{splitNumber:5,length:10,lineStyle:{color:"auto"}},axisLabel:{formatter:function(n){switch(n+""){case"0":return"E";case"1":return"Gas";case"2":return"F"}}},splitLine:{length:15,lineStyle:{color:"auto"}},pointer:{width:2},title:{show:!1},detail:{show:!1},data:[{value:.5,name:"gas"}]},{name:"水表",type:"gauge",center:["75%","50%"],radius:"50%",min:0,max:2,startAngle:315,endAngle:225,splitNumber:2,axisLine:{lineStyle:{color:[[.2,"#ff4500"],[.8,"#48b"],[1,"#228b22"]],width:8}},axisTick:{show:!1},axisLabel:{formatter:function(n){switch(n+""){case"0":return"H";case"1":return"Water";case"2":return"C"}}},splitLine:{length:15,lineStyle:{color:"auto"}},pointer:{width:2},title:{show:!1},detail:{show:!1},data:[{value:.5,name:"gas"}]}]}};t("tcAE");var B={data:function(){return{}},mounted:function(){this.drawMeter("meter")},methods:{createRandomItemStyle:function(){return{normal:{color:"rgb("+[Math.round(50*Math.random()),Math.round(30*Math.random()),Math.round(20*Math.random())].join(",")+")"}}},drawMeter:function(n){var r=this;r.chart=L.a.init(document.getElementById(n),"macarons"),clearInterval(r.startInterval),r.startInterval=setInterval(function(){I.meter.series[0].data[0].value=(100*Math.random()).toFixed(2)-0,I.meter.series[1].data[0].value=(7*Math.random()).toFixed(2)-0,I.meter.series[2].data[0].value=(2*Math.random()).toFixed(2)-0,I.meter.series[3].data[0].value=(2*Math.random()).toFixed(2)-0,r.chart.setOption(I.meter,!0)},5e3)},drawMarkWall:function(n){this.chart=L.a.init(document.getElementById(n)),this.chart.setOption(I.markwall)}}},j={render:function(){var n=this.$createElement,r=this._self._c||n;return r("div",[r("el-card",{staticClass:"dashboard-box"},[r("div",{staticClass:"meter-card",attrs:{id:"meter"}})])],1)},staticRenderFns:[]};var H=t("VU/8")(B,j,!1,function(n){t("pJAm")},null,null).exports,R=t("mtWM"),N=t.n(R),O={data:function(){return{labelPosition:"right",userInfo:{id:null,username:null,job:null,workplace:null,description:null},isUserLogin:!1}},computed:{},mounted:function(){this.getUserInfo()},methods:{getUserInfo:function(){var n=this,r=sessionStorage.getItem("userToken");console.log(r),null!==r?N()({method:"post",url:"/user/info",withCredentials:!0,params:{}}).then(function(r){console.log(r.data.data),n.userInfo=r.data.data,n.isUserLogin=!0}).catch(function(n){console.log(n)}):n.isUserLogin=!1}}},U={render:function(){var n=this.$createElement,r=this._self._c||n;return r("div",[r("div",{staticClass:"join-info-box"},[r("el-card",{staticClass:"join-info-card"},[r("div",{staticClass:"user-title-box",attrs:{slot:"header"},slot:"header"},[r("span",{staticClass:"join-title-name"},[this._v("个人微信号：bboyHan")])]),this._v(" "),r("div",[r("img",{staticClass:"qr-img",attrs:{src:t("MMa0")}})])]),this._v(" "),r("el-card",{staticClass:"join-info-card"},[r("div",{staticClass:"user-title-box",attrs:{slot:"header"},slot:"header"},[r("span",{staticClass:"join-title-name"},[this._v("微信公众号：sharontang0323")])]),this._v(" "),r("div",[r("img",{staticClass:"qr-img",attrs:{src:t("tmxJ")}})])])],1)])},staticRenderFns:[]};var q=t("VU/8")(O,U,!1,function(n){t("4ANP")},"data-v-33d039b8",null).exports,P=t("IEC5"),D=t.n(P),$=t("KLgT"),V=t.n($),W=t("FDtd"),G=t.n(W),z=t("qc7u"),Y=t.n(z),X=t("HcqM"),K=t.n(X),Q=t("qKXV"),Z=t.n(Q),nn=t("5IEw"),rn=t.n(nn),tn={components:{HeaderTab:x,MenuTab:C},data:function(){return{value:"",defaultData:"preview",id:"",title:""}},watch:{$route:function(n,r){console.log(n.params)}},mounted:function(){this.getArticleById()},methods:{getArticleById:function(){var n=this;N()({method:"get",url:"/article/"+n.$route.params.id,withCredentials:!0,params:{}}).then(function(r){console.log(r.data.data),n.value=r.data.data.info,n.title=r.data.data.title,"1"===n.$route.params.id?(n.value=D.a,n.title="一、Mysql的基本操作与数据类型"):"2"===n.$route.params.id?(n.value=V.a,n.title="二、Linux环境安装Mysql"):"3"===n.$route.params.id?(n.value=G.a,n.title="一、Java的概念、安装与配置"):"4"===n.$route.params.id?(n.value=Y.a,n.title="二、Java的基础语法与规范"):"5"===n.$route.params.id?(n.value=K.a,n.title="三、Java的进制、数据类型与内存分析"):"6"===n.$route.params.id?(n.value=Z.a,n.title="四、Java的操作符与流程控制"):"7"===n.$route.params.id?(n.value=rn.a,n.title="一、Go的安装与配置.md"):"8"===n.$route.params.id&&(n.value=Y.a,n.title="二、Go的基础语法与规范")}).catch(function(n){console.log(n)})}}},en={render:function(){var n=this,r=n.$createElement,t=n._self._c||r;return t("div",[t("div",[t("div",{staticClass:"md-shodow"},[t("div",{staticClass:"article-title-box"},[t("h2",[n._v(n._s(n.title))])]),n._v(" "),t("mavon-editor",{staticClass:"article-info-box",attrs:{subfield:!1,defaultOpen:n.defaultData,toolbarsFlag:!1,boxShadow:!0,editable:!1},model:{value:n.value,callback:function(r){n.value=r},expression:"value"}})],1)])])},staticRenderFns:[]};var an=t("VU/8")(tn,en,!1,function(n){t("B9sE")},"data-v-5d3e6887",null).exports,on={data:function(){return{articleList:[],tabPosition:"left"}},mounted:function(){this.getArticleList()},methods:{getArticleList:function(){var n=this;N()({method:"get",url:"/article/1ist",withCredentials:!0,params:{}}).then(function(r){console.log(r.data.data),n.articleList=r.data.data}).catch(function(n){console.log(n)})},toArticle:function(n){}}},sn={render:function(){var n=this,r=n.$createElement,t=n._self._c||r;return t("div",[t("div",{staticClass:"article-list-box"},n._l(n.articleList,function(r,e){return t("el-card",{key:e,staticClass:"article-list-card",attrs:{index:r.id}},[t("div",{staticClass:"clearfix",attrs:{slot:"header"},slot:"header"},[t("span",[t("router-link",{attrs:{to:{path:"/article/"+r.id,params:{id:r.id}}}},[n._v(n._s(r.title))])],1),n._v(" "),t("el-button",{staticStyle:{float:"right",padding:"3px 0"},attrs:{type:"text"}},[n._v("操作按钮")])],1),n._v(" "),t("div",[n._v("\n        "+n._s(r.introduction)+"\n      ")])])}),1)])},staticRenderFns:[]};var ln=t("VU/8")(on,sn,!1,function(n){t("CMS8")},"data-v-408661de",null).exports,cn=t("Dd8w"),dn={components:{HeaderTab:x},data:function(){var n=this;return{userForm:{pass:"",name:""},userRule:{pass:[{validator:function(r,t,e){""===t?e(new Error("请输入密码")):(""!==n.userForm.checkPass&&n.$refs.userForm.validateField("checkPass"),e())},trigger:"blur"}],name:[{validator:function(n,r,t){if(!r)return t(new Error("用户名不能为空"));setTimeout(function(){""===r||null===r?t(new Error("请输入数字值")):t()},1e3)},trigger:"blur"}]}}},methods:t.n(cn)()({},Object(c.b)(["changeUser"]),{submitForm:function(n){var r=this;r.$refs[n].validate(function(n){if(!n)return console.log("error submit!!"),!1});r.userForm.name,r.userForm.pass;N()({method:"post",url:"/user/login",withCredentials:!0,params:{}}).then(function(n){"200"===n.data.code&&(console.log(r.$store),r.saveUserInfo(n.data.data),r.$router.push("/"))}.bind(this)).catch(function(n){return console.log(n)})},resetForm:function(n){this.$refs[n].resetFields()},saveUserInfo:function(n){console.log(n),sessionStorage.setItem("userToken",n.token),sessionStorage.setItem("username",n.username),this.$store.dispatch("changeUser",n)}})},un={render:function(){var n=this,r=n.$createElement,t=n._self._c||r;return t("div",[t("div",[t("header-tab")],1),n._v(" "),t("div",{staticClass:"login-bg"}),n._v(" "),t("div",{staticClass:"login-content"},[t("el-form",{ref:"userForm",attrs:{model:n.userForm,"status-icon":"",rules:n.userRule,"label-width":"100px"}},[t("el-input",{attrs:{placeholder:"用户名"},model:{value:n.userForm.name,callback:function(r){n.$set(n.userForm,"name",r)},expression:"userForm.name"}}),n._v(" "),t("el-input",{attrs:{type:"password",autocomplete:"off",placeholder:"密码"},model:{value:n.userForm.pass,callback:function(r){n.$set(n.userForm,"pass",r)},expression:"userForm.pass"}}),n._v(" "),t("div",{staticClass:"login-button"},[t("button",{staticClass:"login-button-left",on:{click:function(r){return n.submitForm("userForm")}}},[n._v("登录")])]),n._v(" "),t("div",{staticClass:"login-more-sign"},[t("router-link",{attrs:{to:{path:"/register"}}},[t("h6",[n._v("没有账号? 注册")])])],1)],1)],1)])},staticRenderFns:[]};var mn=t("VU/8")(dn,un,!1,function(n){t("mV24")},null,null).exports,hn={components:{HeaderTab:x},data:function(){var n=this;return{userForm:{pass:"",name:""},userRule:{pass:[{validator:function(r,t,e){""===t?e(new Error("请输入密码")):(""!==n.userForm.checkPass&&n.$refs.userForm.validateField("checkPass"),e())},trigger:"blur"}],name:[{validator:function(n,r,t){if(!r)return t(new Error("用户名不能为空"));setTimeout(function(){""===r||null===r?t(new Error("请输入数字值")):t()},1e3)},trigger:"blur"}]}}},methods:{submitForm:function(n){var r=this;r.$refs[n].validate(function(n){if(!n)return console.log("error submit!!"),!1;alert("submit!")});r.userForm.name,r.userForm.pass;N()({method:"post",url:"/user/register",withCredentials:!0,params:{}}).then(function(n){"200"===n.data.code&&(alert("success login"),console.log(r.$store.state.isLogin),r.$router.push("/")),this.saveUserInfo(n.data.data)}.bind(this)).catch(function(n){return console.log(n)})},resetForm:function(n){this.$refs[n].resetFields()},saveUserInfo:function(n){sessionStorage.setItem("userToken",n.token),sessionStorage.setItem("username",n.username),this.$store.dispatch("setUser",n.username),this.$store.dispatch("setToken",n.token)}}},vn={render:function(){var n=this,r=n.$createElement,t=n._self._c||r;return t("div",[t("div",[t("header-tab")],1),n._v(" "),t("div",{staticClass:"register-bg"}),n._v(" "),t("div",{staticClass:"register-content"},[t("el-form",{ref:"userForm",attrs:{model:n.userForm,"status-icon":"",rules:n.userRule,"label-width":"100px"}},[t("el-input",{attrs:{placeholder:"用户名"},model:{value:n.userForm.name,callback:function(r){n.$set(n.userForm,"name",r)},expression:"userForm.name"}}),n._v(" "),t("el-input",{attrs:{type:"password",autocomplete:"off",placeholder:"密码"},model:{value:n.userForm.pass,callback:function(r){n.$set(n.userForm,"pass",r)},expression:"userForm.pass"}}),n._v(" "),t("div",{staticClass:"register-button"},[t("button",{staticClass:"register-button-left",on:{click:function(r){return n.submitForm("userForm")}}},[n._v("注册")])]),n._v(" "),t("div",{staticClass:"register-more-sign"},[t("router-link",{attrs:{to:{path:"/login"}}},[t("h6",[n._v("已有账号? 登录")])])],1)],1)],1)])},staticRenderFns:[]};var fn=t("VU/8")(hn,vn,!1,function(n){t("sUCb")},null,null).exports,pn={data:function(){return{labelPosition:"right",userInfo:{id:null,username:null,job:null,workplace:null,description:null},isUserLogin:!1}},computed:{},mounted:function(){this.getUserInfo()},methods:{getUserInfo:function(){var n=this,r=sessionStorage.getItem("userToken");console.log(r),null!==r?N()({method:"post",url:"/user/info",withCredentials:!0,params:{}}).then(function(r){console.log(r.data.data),n.userInfo=r.data.data,n.isUserLogin=!0}).catch(function(n){console.log(n)}):n.isUserLogin=!1}}},gn={render:function(){var n=this,r=n.$createElement,t=n._self._c||r;return t("div",[t("div",{staticClass:"user-info-box"},[t("el-card",{directives:[{name:"show",rawName:"v-show",value:!n.isUserLogin,expression:"!isUserLogin"}],staticClass:"user-info-card"},[t("div",{staticClass:"user-title-box",attrs:{slot:"header"},slot:"header"},[t("div",{staticClass:"user-title-id"},[n._v("ID："+n._s(n.userInfo.id))]),n._v(" "),t("span",{staticClass:"user-title-name"},[n._v("昵称："+n._s(n.userInfo.username))]),n._v(" "),t("el-button",{staticStyle:{float:"right",padding:"3px 0"},attrs:{type:"text"}},[t("router-link",{attrs:{to:"/login"}},[n._v("去登陆")])],1)],1),n._v(" "),t("div",[n._v("您还没有登录！")])])],1),n._v(" "),t("div",{directives:[{name:"show",rawName:"v-show",value:n.isUserLogin,expression:"isUserLogin"}]},[t("el-timeline",[t("h4",[n._v("基本情况：")]),n._v(" "),t("el-timeline-item",{attrs:{type:"primary"}},[t("el-card",[t("div",{staticClass:"user-title-box",attrs:{slot:"header"},slot:"header"},[t("div",{staticClass:"user-title-id"},[n._v("ID："+n._s(n.userInfo.id))]),n._v(" "),t("span",{staticClass:"user-title-name"},[n._v("昵称："+n._s(n.userInfo.username))]),n._v(" "),t("el-button",{staticStyle:{float:"right",padding:"3px 0"},attrs:{type:"text"}},[n._v("修改资料")])],1),n._v(" "),t("div",[t("strong",[n._v("职位：")]),n._v(n._s(n.userInfo.job)+"\n            "),t("strong",{staticStyle:{"padding-left":"50px"}},[n._v("工作地：")]),n._v(n._s(n.userInfo.workplace)+"\n            "),t("strong",{staticStyle:{"padding-left":"50px"}},[n._v("电话：")]),n._v(n._s(n.userInfo.phone)+"\n            "),t("strong",{staticStyle:{"padding-left":"50px"}},[n._v("邮箱：")]),n._v(n._s(n.userInfo.email)+"\n          ")]),n._v(" "),t("span"),n._v(" "),t("p",[n._v("简介 ："+n._s(n.userInfo.description))])])],1),n._v(" "),t("h4",[n._v("工作履历：")]),n._v(" "),t("el-timeline-item",{attrs:{timestamp:"2018.11 - 至今",placement:"top",type:"success"}},[t("el-card",[t("h4",[n._v("Xx 互联网公司")]),n._v(" "),t("p",[n._v("在公司负责Xxx...")])])],1),n._v(" "),t("el-timeline-item",{attrs:{timestamp:"2018.3 - 2018.10",placement:"top",type:"info"}},[t("el-card",[t("h4",[n._v("Xx 区块链公司")]),n._v(" "),t("p",[n._v("在公司负责Xxx...")])])],1),n._v(" "),t("el-timeline-item",{attrs:{timestamp:"2015.7 - 2018.3",placement:"top",type:"warning"}},[t("el-card",[t("h4",[n._v("Xx 国企")]),n._v(" "),t("div",[n._v("职位： ")]),n._v(" "),t("p",[n._v("在公司负责Xxx...")])])],1)],1)],1)])},staticRenderFns:[]};var bn=t("VU/8")(pn,gn,!1,function(n){t("2olK")},"data-v-1046595e",null).exports,yn={data:function(){return{shareList:[]}},mounted:function(){this.getShareList()},methods:{getShareList:function(){var n=this;N()({method:"get",url:"/share/1ist",withCredentials:!0,params:{}}).then(function(r){console.log(r.data.data),n.shareList=r.data.data}).catch(function(n){console.log(n)})}}},Mn={render:function(){var n=this,r=n.$createElement,t=n._self._c||r;return t("div",[t("div",{staticClass:"share-list-box"},n._l(n.shareList,function(r,e){return t("div",{key:e,staticClass:"share-list-card",attrs:{index:r.id}},[n._m(0,!0),n._v(" "),t("div",{staticClass:"share-list-card-bottom"},[t("span",[t("router-link",{attrs:{to:{path:"/share/"+r.id,params:{id:r.id}}}},[n._v(n._s(r.title))])],1)])])}),0)])},staticRenderFns:[function(){var n=this.$createElement,r=this._self._c||n;return r("div",{staticClass:"share-list-card-top"},[r("img",{staticClass:"share-card-img",attrs:{src:t("eOq7")}})])}]};var wn=t("VU/8")(yn,Mn,!1,function(n){t("5TQl")},"data-v-7d68068c",null).exports,En={components:{HeaderTab:x},data:function(){return{}},mounted:function(){this.getShareById()},methods:{getShareById:function(){var n=this;N()({method:"get",url:"/share/"+n.$route.params.id,withCredentials:!0,params:{}}).then(function(r){console.log(r.data.data),n.value=r.data.data.info,n.title=r.data.data.title}).catch(function(n){console.log(n)})}}},xn={render:function(){var n=this.$createElement,r=this._self._c||n;return r("div",[r("div",[r("header-tab")],1)])},staticRenderFns:[]};var Sn=t("VU/8")(En,xn,!1,function(n){t("DfTy")},null,null).exports,_n={data:function(){return{}},mounted:function(){this.drawForm("form1")},methods:{drawForm:function(n){var r=this;r.chart=L.a.init(document.getElementById(n));for(var t={unit:"Kbps",names:["input","output"],lineX:["2018-11-11 17:01","2018-11-11 17:02","2018-11-11 17:03","2018-11-11 17:04","2018-11-11 17:05","2018-11-11 17:06","2018-11-11 17:07","2018-11-11 17:08","2018-11-11 17:09","2018-11-11 17:10","2018-11-11 17:11","2018-11-11 17:12","2018-11-11 17:13","2018-11-11 17:14","2018-11-11 17:15","2018-11-11 17:16","2018-11-11 17:17","2018-11-11 17:18","2018-11-11 17:19","2018-11-11 17:20"],value:[[451,352,303,534,95,236,217,328,159,151,231,192,453,524,165,236,527,328,129,530],[360,545,80,192,330,580,192,80,250,453,352,28,625,345,65,325,468,108,253,98]]},e=["rgba(23, 255, 243","rgba(255,100,97"],a=[],o=0;o<t.names.length;o++){var i=o;i>e.length-1&&(i=e.length-1);var s={name:t.names[o],type:"line",color:e[i]+")",smooth:!0,areaStyle:{normal:{color:new L.a.graphic.LinearGradient(0,0,0,1,[{offset:0,color:e[i]+", 0.3)"},{offset:.8,color:e[i]+", 0)"}],!1),shadowColor:"rgba(0, 0, 0, 0.1)",shadowBlur:10}},symbol:"circle",symbolSize:5,data:t.value[o]};a.push(s)}a[0].markLine={silent:!0,data:[{yAxis:5},{yAxis:100},{yAxis:200},{yAxis:300},{yAxis:400}]};var l={backgroundColor:"",tooltip:{trigger:"axis"},legend:{data:t.names,textStyle:{fontSize:12,color:"rgb(0,253,255,0.6)"},right:"4%"},grid:{top:"14%",left:"4%",right:"4%",bottom:"12%",containLabel:!0},xAxis:{type:"category",boundaryGap:!1,data:t.lineX,axisLabel:{textStyle:{color:"rgb(0,253,255,0.6)"},formatter:function(n){return n.split(" ")[0]+"\n"+n.split(" ")[1]}}},yAxis:{name:t.unit,type:"value",axisLabel:{formatter:"{value}",textStyle:{color:"rgb(0,253,255,0.6)"}},splitLine:{lineStyle:{color:"rgb(23,255,243,0.3)"}},axisLine:{lineStyle:{color:"rgb(0,253,255,0.6)"}}},series:a};r.chart.setOption(l),clearInterval(r.startInterval),r.startInterval=setInterval(function(){r.chart.setOption({legend:{selected:{input:!1,output:!1}}}),r.chart.setOption({legend:{selected:{input:!0,output:!0}}})},1e4)}}},Fn={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,r=this._self._c||n;return r("div",[r("div",{staticClass:"form1",attrs:{id:"form1"}})])}]};var Cn={data:function(){return{}},mounted:function(){this.drawForm("form2")},methods:{drawForm:function(n){this.chart=L.a.init(document.getElementById(n));var r={backgroundColor:"",title:{text:"",textStyle:{color:"#00FFFF",fontSize:24}},legend:{bottom:20,textStyle:{color:"#fff"},data:["Male","Female"]},grid:{left:"9%",right:"4%",bottom:"25%",containLabel:!1},tooltip:{show:"true",trigger:"axis",axisPointer:{type:"shadow"}},yAxis:{type:"value",axisTick:{show:!1},axisLine:{show:!0,lineStyle:{color:"#fff"}},splitLine:{show:!0,lineStyle:{color:"#aaa"}}},xAxis:[{type:"category",axisTick:{show:!1},axisLine:{show:!0,lineStyle:{color:"#fff"}},data:["Yes","No","Other"]},{type:"category",axisLine:{show:!1},axisTick:{show:!1},axisLabel:{show:!1},splitArea:{show:!1},splitLine:{show:!1},data:["Yes","No","Other"]}],series:[{name:"总人数",type:"bar",xAxisIndex:1,itemStyle:{normal:{show:!0,color:"#277ace",barBorderRadius:0,borderWidth:0,borderColor:"#333"}},barWidth:"20%",data:[33,33,33]},{name:"总人数",type:"bar",xAxisIndex:1,itemStyle:{normal:{show:!0,color:"#277ace",barBorderRadius:0,borderWidth:0,borderColor:"#333"}},barWidth:"20%",barGap:"100%",data:[51,51,51]},{name:"Male",type:"bar",itemStyle:{normal:{show:!0,color:new L.a.graphic.LinearGradient(0,0,0,1,[{offset:0,color:"#00FFE6"},{offset:1,color:"#2a99c6"}]),barBorderRadius:0,borderWidth:0,borderColor:"#333"}},label:{normal:{show:!0,position:"top",textStyle:{color:"#fff"}}},barWidth:"20%",data:[8,15,10]},{name:"Female",type:"bar",barWidth:"20%",itemStyle:{normal:{show:!0,color:new L.a.graphic.LinearGradient(0,0,0,1,[{offset:0,color:"#3023AE"},{offset:1,color:"#34d88b"}]),barBorderRadius:0,borderWidth:0,borderColor:"#333"}},label:{normal:{show:!0,position:"top",textStyle:{color:"#fff"}}},barGap:"100%",data:[8,17,26]}]};this.chart.setOption(r)}}},Jn={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var n=this.$createElement,r=this._self._c||n;return r("div",[r("div",{staticClass:"form2",attrs:{id:"form2"}})])}]};var An={components:{HeaderTab:x,Form1:t("VU/8")(_n,Fn,!1,function(n){t("vXzM")},null,null).exports,Form2:t("VU/8")(Cn,Jn,!1,function(n){t("ft3X")},null,null).exports},data:function(){return{}},mounted:function(){},methods:{}},Tn={render:function(){var n=this.$createElement,r=this._self._c||n;return r("div",[r("div",{staticClass:"dataview-bg"},[r("div",{staticClass:"dataview-header"},[r("router-link",{staticClass:"back-home",attrs:{to:{path:"/article"}}},[this._v("Back")])],1),this._v(" "),r("div",{staticClass:"dataview-container"},[r("div",{staticClass:"dataview-left-1"},[r("form2")],1),this._v(" "),r("div",{staticClass:"dataview-left-2"},[r("form1")],1)])])])},staticRenderFns:[]};var kn=t("VU/8")(An,Tn,!1,function(n){t("YJiq")},null,null).exports;l.default.use(M.a);var Ln=new M.a({routes:[{path:"/",redirect:"/article"},{path:"/home",name:"主页",component:T,children:[{path:"/markwall",name:"过往印记",component:H},{path:"/article",name:"技术杂文",component:ln,children:[]},{path:"/article/:id",name:"文章",component:an},{path:"/user",name:"个人中心",component:bn},{path:"/join",name:"加入我们",component:q},{path:"/share",name:"资源分享",component:wn}]},{path:"/login",name:"用户登录",component:mn},{path:"/register",name:"用户注册",component:fn},{path:"/share/:id",name:"资源",component:Sn},{path:"/dataview",name:"数据分析",component:kn}]}),In=t("zL8q"),Bn=t.n(In),jn=(t("tvR6"),t("OS1Z")),Hn=t.n(jn);t("pw1w");l.default.config.productionTip=!1,l.default.prototype.axios=N.a,l.default.prototype.$echarts=L.a,l.default.use(Bn.a),l.default.use(Hn.a),l.default.use(c.a),t("qs/E"),N.a.defaults.withCredentials=!0,N.a.defaults.headers.common.Authorization=g.state.token,N.a.interceptors.request.use(function(n){return g.state.token&&(n.headers.Authorization="Bearer "+g.state.token),n},function(n){return s.a.reject(n)}),N.a.interceptors.response.use(function(n){return n},function(n){if(n.response)switch(n.response.status){case 401:sessionStorage.setItem("userToken",null),sessionStorage.setItem("username",null),console.log(Ln.currentRoute.fullPath),Ln.replace({path:"/login",query:{redirect:Ln.currentRoute.fullPath}})}return s.a.reject(n.response)}),new l.default({el:"#app",router:Ln,store:g,components:{App:y},template:"<App/>"})},T4TL:function(n,r){},TKgB:function(n,r){n.exports={code:"200",data:{title:"这是一篇测试文章 -2",info:"# bboyhan-web - Text 2 \n> bboyhan website\n## Build Setup\n``` bash,\n# install dependencies\nnpm install\n# serve with hot reload at localhost:8080\n```"},msg:""}},UalO:function(n,r){n.exports={code:"200",data:[{title:"标题1:TEXT 测试资源1",id:1,introduction:"这部分是摘要内容......"},{title:"标题2:TEXT 测试资源2",id:2,introduction:"这部分是摘要内容......"},{title:"标题3:TEXT 测试资源3",id:3,introduction:"这部分是摘要内容......"},{title:"标题4:TEXT 测试资源4",id:4,introduction:"这部分是摘要内容......"}],msg:""}},YJiq:function(n,r){},b4vH:function(n,r){},eOq7:function(n,r,t){n.exports=t.p+"static/img/logo.8422aef.jpg"},ft3X:function(n,r){},i5HF:function(n,r){},mV24:function(n,r){},pJAm:function(n,r){},pw1w:function(n,r){},qKXV:function(n,r){n.exports='## 文章目录（Table of Contents）\r\n\r\n- [四、操作符与流程控制](#四操作符与流程控制)\r\n  - [1、操作符](#1操作符)\r\n    - [1.1 算术操作符](#11-算术操作符)\r\n    - [1.2 比较运算符](#12-比较运算符)\r\n    - [1.3 位运算符](#13-位运算符)\r\n    - [1.4 逻辑运算符](#14-逻辑运算符)\r\n    - [1.5 三元运算符](#15-三元运算符)\r\n    - [1.6 运算转换](#16-运算转换)\r\n  - [2、流程控制](#2流程控制)\r\n    - [2.1 分支语句](#21-分支语句)\r\n    - [2.2 循环语句](#22-循环语句)\r\n    - [2.3 流程跳转](#23-流程跳转)\r\n\r\n# 四、操作符与流程控制\r\n\r\n## 1、操作符\r\n\r\n我们知道了程序用变量来表示数据，而操作符，顾名思义，就是来操作数据。在由操作符和数据所构成的表达式，被操纵的数据也被称为数据元。\r\n\r\n|优先级\t|操作符分类|操作符|\r\n|---|---|---|\r\n|由高到低|一元操作符|! ++ -- - ~|\r\n||算术操作符、位操作符| * / % + - >> << >>> |\r\n||比较操作符| > < >= <= != == |\r\n||逻辑操作符| && \\|\\| % \\| ^ |\r\n||三元操作符| 布尔表达式 ? 表达式1: 表达式2 |\r\n||赋值操作符| = *= += -= /= %= |\r\n\r\n### 1.1 算术操作符\r\n\r\nJava的算数操作符与其它大多数程序设计语言都是相同的，其中包括加(+)、减(-)、乘(×)、除(÷)以及取模(%)。\r\n\r\n假设：整数变量A的值为10，变量B的值为20，如下表：\r\n\r\n|操作符\t|描述|\t例子|\r\n|---|---|---|\r\n|+\t|加法 - 相加运算符两侧的值\t|A + B 等于 30|\r\n|-\t|减法 - 左操作数减去右操作数|\tA – B 等于 -10|\r\n|*|\t乘法 - 相乘操作符两侧的值|\tA * B等于200|\r\n|/\t|除法 - 左操作数除以右操作数\t|B / A等于2|\r\n|%\t|取余 - 左操作数除以右操作数的余数\t|B%A等于0|\r\n|++\t|自增: 操作数的值增加1\t|B++ 或 ++B 等于 21|\r\n|--\t|自减: 操作数的值减少1|\tB-- 或 --B 等于 19|\r\n\r\n**注：** \r\n1. 前缀自增自减法(++a,--a): 先进行自增或者自减运算，再进行表达式运算；\r\n2. 后缀自增自减法(a++,a--): 先进行表达式运算，再进行自增或者自减运算；\r\n\r\n### 1.2 比较运算符\r\n\r\n假设：整数变量A的值为10，变量B的值为20\r\n\r\n|操作符\t|描述|\t例子|\r\n|---|---|---|\r\n|==\t|检查如果两个操作数的值是否相等，如果相等则条件为真。\t|（A == B）为假。|\r\n|!=\t|检查如果两个操作数的值是否相等，如果值不相等则条件为真。\t|(A != B) 为真。|\r\n|> \t|检查左操作数的值是否大于右操作数的值，如果是那么条件为真。\t|（A> B）为假。|\r\n|< \t|检查左操作数的值是否小于右操作数的值，如果是那么条件为真。\t|（A <B）为真。|\r\n|>=\t|检查左操作数的值是否大于或等于右操作数的值，如果是那么条件为真。\t|（A> = B）为假。|\r\n|<=\t|检查左操作数的值是否小于或等于右操作数的值，如果是那么条件为真。\t|（A <= B）为真。|\r\n\r\n### 1.3 位运算符\r\n\r\n假设：整数变量A的值为60，变量B的值为13\r\n\r\n|操作符\t|描述|\t例子|\r\n|---|---|---|\r\n|＆\t|如果相对应位都是1，则结果为1，否则为0\t|（A＆B），得到12，即0000 1100|\r\n|\\|\t|如果相对应位都是0，则结果为0，否则为1\t|（A \\| B）得到61，即 0011 1101|\r\n|^\t|如果相对应位值相同，则结果为0，否则为1\t|（A ^ B）得到49，即 0011 0001|\r\n|~|按位取反运算符翻转操作数的每一位，即0变成1，1变成0。|\t（~A）得到-61，即1100 0011|\r\n|<< |\t按位左移运算符。左操作数按位左移右操作数指定的位数。|\tA << 2得到240，即 1111 0000|\r\n|>> |\t按位右移运算符。左操作数按位右移右操作数指定的位数。|\tA >> 2得到15即 1111|\r\n|>>> |\t按位右移补零操作符。左操作数的值按右操作数指定的位数右移，移动得到的空位以零填充。|\tA>>>2得到15即0000 1111|\r\n\r\n### 1.4 逻辑运算符\r\n\r\n假设：布尔变量A为真，变量B为假\r\n\r\n|操作符\t|描述|\t例子|\r\n|---|---|---|\r\n|&&\t|称为逻辑与运算符。当且仅当两个操作数都为真，条件才为真。\t|(A && B)为假。|\r\n|\\| \\|\t|称为逻辑或操作符。如果任何两个操作数任何一个为真，条件为真。\t|(A \\| \\| B)为真。|\r\n|！\t|称为逻辑非运算符。用来反转操作数的逻辑状态。如果条件为true，则逻辑非运算符将得到false。\t|!(A && B)为真。|\r\n\r\n**补充：**\r\n逻辑运算符包含短路逻辑运算，即左边条件如果成立，则表示该语句条件“成立”，不继续执行后续判断。\r\n\r\n### 1.5 三元运算符\r\n\r\n三元运算符，又称条件运算符。\r\n\r\n格式如下：\r\n\r\n```shell\r\n# ?前为表达式，如果表达式返回结果为true，则x赋值为:前的值，false则x赋值为:后的值\r\nvariable x = (expression) ? value if true : value if false\r\n\r\n# eg\r\n\r\nint age = 23;\r\n\r\nString name = (age == 23) ? "bboyhan": "BBOYHAN";\r\n\r\nSystem.out.println(name);\r\n```\r\n\r\n### 1.6 运算转换\r\n\r\nJava规定，在执行数据的操作运算，必须是同一数据类型。如整型只能和整型进行+操作，我们知道了Java的8大基本数据类型定义了不同数值范围的数据。Java定义了若干使用于表达式的类型提升规则。\r\n\r\n1. byte、short、char类型的数据在进行运算时将自动转化为int类型；\r\n2. 如果其中一个操作数是float类型，另一个将转换为float类型；\r\n3. 如果其中一个操作数是long类型，另一个将转换为long类型；\r\n4. boolean类型与其他基本类型不能进行类型的转换（既不能进行自动类型的提升，也不能强制类型转换），否则，将编译出错。\r\n\r\n在运算过程中，由低字节向高字节自动转换（正向过程）,Java会自行处理。\r\n\r\n![类型转换](https://github.com/bboyHan/booknote/blob/master/img/java_auto_change.png)\r\n\r\n但由高字节需要向低字节转换(逆向过程)，需要使用强制转换(可能丢失精度)。**需要注意的一点是：在强制类型转换中目标类型和源类型变量的类型始终没有发生改变。**\r\n\r\n```java\r\nint a=(int)3.14;\r\n```\r\n\r\n**提问：float类型能否与long类型进行自动转换？**\r\n\r\n答：能，float能表示的数的范围比long大，一个long型数可以转为float型。\r\n  \r\n1. long类型，取值范围是-2^63 --\x3e 2^63-1(-9 223 372 036 854 775 808 ~ 9 223 372 036 854 775 807)\r\n2. float类型，取值范围是2^(-149) --\x3e (2-2^(-23))*2^127,也就是Float.MIN_VALUE和Float.MAX_VALUE\r\n  \r\n任何一个long类型的数字都可以使用float类型的表示方法来表示。但是，由于float有精度限制，所以在转换的过程中有可能丢失精度\r\n\r\n**float内存存储原理**\r\n\r\n在IEEE标准754中，float浮点数分为三部分组成：\r\n\r\n1. 符号位（S）,0表示正数，1表示负数。翻转该位的值会翻转该数字的符号。\r\n2. 指数位（E）,指数字段需要表示正指数和负指数。\r\n3. 尾部（F）,也被称为有效数，代表数字的精度的位。\r\n\r\n||Sign|\tExponent\t|Fraction|\r\n|---|---|---|---|\r\n|单精度,Single Precision\t|1 \\[31\\]\t|8 \\[30–23\\]\t| \\[22–00\\]|\r\n|双精度,Double Precision\t|1 \\[63\\]\t|11 \\[62–52\\]\t|52 \\[51–00\\]|\r\n\r\nLaid out as bits, floating point numbers look like this:\r\n\r\nSingle: SEEEEEEE EFFFFFFF FFFFFFFF FFFFFFFF\r\n\r\nDouble: SEEEEEEE EEEEFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF\r\n\r\n## 2、流程控制\r\n\r\n现实生活中，不论是日常事务还是生产工序，都会按照特定的流程进行运转。在Java当中，同样地可以通过特定的语句进行相应的流程控制。\r\n\r\n### 2.1 分支语句\r\n\r\n#### （一）if else\r\nif...else...语句，布尔表达式的值为true时，执行if代码块，为false时，执行else代码块。\r\n\r\n```shell\r\nif(布尔表达式){\r\n    //...\r\n}else{\r\n    //...\r\n}\r\n```\r\n\r\n```shell\r\nint x = 1;\r\nif(x == 1){\r\n    System.out.println("x 等于 1，执行这句")\r\n}else{\r\n    System.out.println("x 不等于 1，执行这句")\r\n}\r\n```\r\n\r\n多个条件的情况，可以在中间插入 else if(布尔表达式)。\r\n\r\n```shell\r\nint x = 1;\r\nif(x < 1){\r\n    System.out.println("x 小于 1，执行这句")\r\n}else if (x == 1){\r\n    System.out.println("x 等于 1，执行这句")\r\n}else{\r\n    System.out.println("否则，执行这句")\r\n}\r\n```\r\n\r\n#### （二）switch\r\n\r\nswitch case 语句判断一个变量与一系列值中某个值是否相等，每个值称为一个分支。\r\n\r\n```shell\r\nswitch(expression){\r\n    case value :\r\n       //代码\r\n       break; //可选，不写相当于会继续执行下方的case判断\r\n    case value :\r\n       //代码\r\n       break; //可选\r\n    //你可以有任意数量的case语句\r\n    default : //可选\r\n       //...\r\n}\r\n```\r\n\r\n```shell\r\nint age = 23;\r\n\r\nswitch(age){\r\n    case 18 :\r\n       System.out.println("age 等于 18，执行，有break，结束")\r\n       break;\r\n    case 23 :\r\n       System.out.println("age 等于 23，执行")\r\n       //break; //没break，继续往下执行 \r\n    default : \r\n       System.out.println("其它情况，执行")\r\n}\r\n```\r\n\r\nswitch 语句中的变量类型可以是： byte、short、int、char、String、Enum类型，同时 case 标签必须为字符串常量或字面量。\r\n\r\n### 2.2 循环语句\r\n\r\n#### （一）while、do…while\r\n\r\n```shell\r\nwhile( 布尔表达式 ) {\r\n    //...\r\n}\r\n\r\n# eg\r\n\r\nint x = 10;\r\nwhile( x < 20 ) {\r\n    System.out.print("value of x : " + x );\r\n    x++;\r\n    System.out.print("\\n");\r\n}\r\n```\r\n\r\n```shell\r\ndo {\r\n    //...\r\n}while( 布尔表达式 );\r\n\r\n# eg\r\n\r\nint x = 10;\r\n \r\ndo{\r\n    System.out.print("value of x : " + x );\r\n    x++;\r\n    System.out.print("\\n");\r\n}while( x < 20 );\r\n\r\n```\r\n\r\n#### （二）for\r\n\r\n**形式一：**\r\n\r\n```shell\r\nfor(初始化; 布尔表达式; 更新) {\r\n    //...\r\n}\r\n\r\n# eg\r\n\r\nint[] intList = {1， 2， 3， 4};\r\n\r\n//遍历\r\nfor (int j = 0; j < intList.length; j++) {\r\n    int i = intList[j];\r\n    System.out.println(i);\r\n}\r\n\r\n```\r\n\r\n**形式二：**\r\n\r\n```shell\r\n# for (循环变量类型 循环变量名称 : 要被遍历的对象)  循环体\r\n\r\n/* 建立一个数组 */\r\nint[] intList = {1， 2， 3， 4};\r\n\r\n/* 开始遍历 */\r\nfor (int i : intList) {\r\n    System.out.println(i);\r\n}\r\n \r\n```\r\n\r\n### 2.3 流程跳转\r\n\r\n|语句|说明|\r\n|---|---|\r\n|break|终止循环|\r\n|continue|跳过本次（当前）循环|\r\n|return|退出本方法，跳至上层调用方法|\r\n\r\n\r\n```shell\r\n# eg\r\n\r\nint[] intList = {1， 2， 3， 4};\r\n\r\n//遍历\r\nfor (int j = 0; j < intList.length; j++) {\r\n    int i = intList[j];\r\n    if(i == 1){\r\n        continue; //跳出本次循环，不打印1\r\n    }\r\n    System.out.println(i);\r\n}\r\n```\r\n\r\n```shell\r\n# eg\r\n\r\nint[] intList = {1， 2， 3， 4};\r\n\r\n//遍历\r\nfor (int j = 0; j < intList.length; j++) {\r\n    int i = intList[j];\r\n    if(i == 2){\r\n        break; //终止循环，不再执行\r\n    }\r\n    System.out.println(i);\r\n}\r\n\r\n# 扩展\r\n\r\nint[] intList = {1， 2， 3， 4};\r\n\r\n//遍历\r\nA:for (int j = 0; j < intList.length; j++) {\r\n    int i = intList[j];\r\n    if(i == 2){\r\n        break A; //跳至A，A可任意命名\r\n    }\r\n    System.out.println(i);\r\n}\r\n```\r\n\r\n\r\n'},qc7u:function(n,r){n.exports="## 文章目录（Table of Contents）\r\n\r\n- [二、基础语法与规范](#二基础语法与规范)\r\n  - [1、Java基本语法](#1java基本语法)\r\n    - [1.1 标识符的命名规则](#11-标识符的命名规则)\r\n    - [1.2 Java关键字](#12-java关键字)\r\n  - [2、面向对象](#2面向对象)\r\n    - [2.1 对象和类](#21-对象和类)\r\n    - [2.2 修饰符、变量与方法](#22-修饰符变量与方法)\r\n    - [2.3 封装、继承、多态](#23-封装继承多态)\r\n\r\n# 二、基础语法与规范\r\n\r\n## 1、Java基本语法\r\n\r\n[上一篇](https://github.com/bboyHan/booknote/blob/master/java/%E4%B8%80%E3%80%81%E6%A6%82%E5%BF%B5%E3%80%81%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE.md)我们讲到了Java的第一个程序`HelloWorld`。并且用命令行的方式让程序在控制台输出了Hello World字样。这一篇，我们来大致说一下这段代码是如何运行起来的。\r\n\r\n首先，所有的Java程序，都必须要有一个称之为“主方法”的函数入口，这个入口便是`public static void main(String []args) `方法（我们将它简称为`main`方法）。也就是说，要让一个Java程序运行起来，就必须通过`main`方法才可以执行一系列的操作与运算，最终达到目的需求。\r\n\r\n一段代码的组成需要类名、变量名、和方法名，可以统称为**Java的标识符**。\r\n\r\n### 1.1 标识符的命名规则\r\n\r\n+ 所有的标识符都应该以字母（A-Z、a-z）、数字、美元符（$）、或者下划线（_）组成\r\n\r\n+ 首字符只能以字母、$、下划线（_）开头\r\n\r\n+ Java所定义的“关键字”不能作为标识符使用\r\n\r\n+ 标识符大小写敏感，如age和Age是由区别的\r\n\r\n```\r\n//正确的标识符命名：\r\nbboyHan、_bboyHan、_bboy_$_23_han\r\n\r\n//错误的命名：\r\n23bboy、+23han、bboy&\r\n```\r\n\r\n### 1.2 Java关键字\r\n\r\n1.1中提到了标识符的命名不能以“关键字”进行命名，我们来看一下Java的关键字有哪些：\r\n\r\n| 类别 | 关键字 | 说明 |关键字 | 说明 |\r\n|------|------|------|------|------|\r\n| 访问控制 |private|私有的|public|\t公共的|\r\n||protected\t|受保护的|||\r\n|类、方法和变量修饰符|\tabstract|\t声明抽象|new\t|新,创建|\r\n||class\t|类|static|\t静态|\r\n||extends|\t扩充,继承|strictfp|\t严格,精准|\r\n||final\t|最终值,不可改变的|synchronized|\t线程,同步|\r\n||implements|\t实现（接口）|transient\t|短暂|\r\n||interface\t|接口|volatile|\t易失|\r\n||native|\t本地，原生方法（非 Java 实现）|||\r\n|程序控制语句|\tbreak|\t跳出循环|case\t|定义一个值以供 switch 选择|\r\n||continue|\t继续|while\t|循环|\r\n||default|\t默认|switch|\t根据值选择执行|\r\n||do|\t运行|return|\t返回|\r\n||else|\t否则|instanceof|\t实例|\r\n||for|\t循环|if|\t如果|\r\n|错误处理\t|assert\t|断言表达式是否为真|try|\t捕获异常|\r\n||catch\t|捕捉异常|throws|\t声明一个异常可能被抛出|\r\n||finally|\t有没有异常都执行|throw\t|抛出一个异常对象|\r\n|包相关|\timport\t|引入|\r\n||package|\t包|\r\n|基本类型\t|boolean|\t布尔型|short|\t短整型|\r\n||byte\t|字节型|long|\t长整型|\r\n||char\t|字符型|int|\t整型|\r\n||double|\t双精度浮点|float\t|单精度浮点|\r\n|变量引用|\tsuper|\t父类,超类|void|\t无返回值|\r\n||this|\t本类|\r\n|保留关键字|\tgoto|\t是关键字，但不能使用|null\t|空|\r\n||const\t|是关键字，但不能使用|\r\n\r\n## 2、面向对象\r\n\r\n既然说Java是一个面向对象的设计语言，**那什么是面向对象？**\r\n\r\n提到“面向对象”，就必然会提到“面向过程”。**面向过程（Procedure Oriented）**，就是计算机执行一段“过程化”的叙事思维，比如说“打开电脑”这个动作，“电脑”作为对象的参数传入方法中，然后在方法内定义打开电脑的具体步骤。而**面向对象（Object Oriented）**，是把构成问题事务分解成各个对象，建立对象的目的不是为了完成一个步骤，而是为了描叙某个事物在整个解决问题的步骤中的行为。还以“打开电脑”这个例子来说，面向对象的编程，就是将电脑抽象出来，定义电脑的相关属性（如大小、CPU、各种硬件组成）和操作行为（如开机、关机、重启），进而解决这一问题。\r\n\r\n### 2.1 对象和类\r\n\r\nJava之父Gosling设计的Object类，是任何类的默认父类，即是万事万物的抽象，高度概括了事物的自然行为和社会行为。**类**相当于是某个具体事物的进一步抽象。如Iphone、小米、华为P30可以统称为“手机类”，王者农药、吃鸡、消消乐都是“游戏类”。**对象**，就是这其中一个个具体的事物，如Iphone是一个对象，小米是一个对象。\r\n\r\n类的定义由访问级别、类型、类名、是否抽象、是否静态、泛型标识、继承等组成。类型分为class、enum（枚举）、interface（接口），类的访问级别有public和无访问控制符。\r\n\r\n### 2.2 修饰符、变量与方法\r\n\r\n面向对象编程，就是一个对象先抽象出模型，在定义共性特征和行为，进而解决实际问题。\r\n\r\n+ 变量\r\n\r\nJava的变量，我们可以把它理解为一个对象的属性特征，比如小米手机，它有长宽高、重量、使用寿命、内存等等。\r\n\r\n+ 方法\r\n\r\n是指对象的操作行为，比如小米手机可以打电话、开机、关机、充电等等。\r\n\r\n+ 修饰符\r\n\r\nJava通过对变量和方法进行不同的修饰，可以做到将对象的行为和属性进行对外或对内的访问限制，即公有化、私有化。如我的小米手机需要指纹才能解锁、我的电话通讯录只有我才能看，手机外观所有人都可以看到......Java可以使用修饰符来修饰类中方法和属性。主要有两类修饰符：\r\n\r\n**访问修饰符：**Java中，可以使用访问控制符来保护对类、变量、方法和构造方法的访问。Java 支持 4 种不同的访问权限。\r\n\r\n|访问权限\t|public|\tprotected|\tdefault|\tprivate|\r\n|---|---|---|---|---|\r\n|同一个类|\tyes|\tyes|\tyes|\tyes|\r\n|同一个包|\tyes|\tyes|\tyes|\tno|\r\n|子类|\tyes|\tyes|\tno|\tno|\r\n|其它类|\tyes|\tno|\tno|\tno|\r\n\r\n**非访问修饰符：**为了实现一些其他的功能，Java 也提供了5种非访问修饰符。\r\n\r\n|修饰符|说明|\r\n|----|-----|\r\n|static |静态修饰符，修饰类方法和类变量。|\r\n|final |最终修饰符，修饰类、方法和变量，修饰的类不能够被继承，修饰的方法不能被重新定义，修饰的变量表示为不可修改的常量。|\r\n|abstract|抽象修饰符，用来创建抽象类和抽象方法。|\r\n|synchronized |修饰符，用于线程编程。|\r\n|transient |修饰符,用于跳过序列化对象中特定的敏感变量|\r\n|volatile |修饰符，用于线程编程。|\r\n\r\n\r\n**注意点**：所谓friendly/default，即指的是在类前不加任何修饰符的情况，并不是真的有这样一个“修饰符”。\r\n\r\n**修饰符修饰类、方法和变量的详细列表**\r\n\r\n|类别|修饰符|说明|\r\n|-----|---|-----|\r\n|类修饰符 |public|将一个类声明为公共类，他可以被任何对象访问，一个程序的主类必须是公共类。|\r\n||abstract|将一个类声明为抽象类，没有实现的方法，需要子类提供方法实现。|\r\n||final|将一个类生命为最终（即非继承类），表示他不能被其他类继承。|\r\n||friendly|默认的修饰符，只有在相同包中的对象才能使用这样的类。|\r\n|成员变量修饰符| public|指定该变量为公共的，他可以被任何对象的方法访问。|\r\n||private|私有访问控制符，指定该变量只允许自己的类的方法访问，其他任何类（包括子类）中的方法均不能访问。|\r\n||protected|保护访问控制符，指定该变量可以别被自己的类和子类访问。在子类中可以覆盖此变量。|\r\n||friendly |在同一个包中的类可以访问，其他包中的类不能访问。|\r\n||final|最终修饰符，指定此变量的值不能变。|\r\n||static|静态修饰符，指定变量被所有对象共享，即所有实例都可以使用该变量。变量属于这个类。|\r\n||transient|过度修饰符，让某些被修饰的成员属性变量不被序列化。|\r\n||volatile|易失修饰符，指定该变量可以同时被几个线程控制和修改。|\r\n|方法修饰符|public|公共控制符|\r\n||private|私有控制符，指定此方法只能有自己类等方法访问，其他的类不能访问（包括子类）|\r\n||protected|保护访问控制符，指定该方法可以被它的类和子类进行访问。|\r\n||final|指定该方法不能被重载。|\r\n||static|指定不需要实例化就可以激活的一个方法。|\r\n||synchronize|同步修饰符，在多个线程中，该修饰符用于在运行前，对他所属的方法加锁，以防止其他线程的访问，运行结束后解锁。|\r\n||native|本地修饰符。指定此方法的方法体是用其他语言在程序外部编写的。|\r\n||void|无返回值|\r\n\r\n\r\n**定义一个类**\r\n\r\n```java\r\n//定义一个小米手机类\r\npublic class XiaoMi{\r\n    //定义属性\r\n    public int weight;      //重量，所有人可看，用public修饰\r\n    private List phoneList; //联系人列表，仅自己可见，用private修饰\r\n\r\n    //定义方法\r\n    public void callPhone(String phoneNumber){\r\n        //...打电话\r\n    }\r\n    private void unlockPhone(String password){\r\n        //...指纹解锁\r\n    }\r\n}\r\n```\r\n\r\n### 2.3 封装、继承、多态\r\n\r\n有了面向对象的编程思想之后，就具备了一定的建模能力。将现实中的一些具体业务进行“抽象”，通过一定的项目实践，积累经验。便可掌握Java编程过程中的一大关键要素。**抽象**，是面向对象思想最基本的能力之一，正确而严谨的业务抽象和建模分析能力，便是后续的**封装、继承、多态**的基础。\r\n\r\nJava编程中，必须了解面向对象的三大特性，即**封装、继承、多态**\r\n\r\n**封装**\r\n\r\n封装思想的核心，就是“隐藏细节”、“数据安全”：将对象不需要让外界访问的成员变量和方法私有化，只提供符合开发者意愿的公有方法来访问这些数据和逻辑，保证了数据的安全和程序的稳定。\r\n\r\n> 实现思路：\r\n>\r\n>使用 private 修饰符把成员变量设置为私有，防止外部程序直接随意调用或修改成员变量，然后对外提供public 的 set 和 get 方法按照开发者的意愿设置和获取成员变量的值。\r\n\r\n- a、修改属性的可见性——设为private；\r\n- b、创建getter/setter方法，用于属性的读写；\r\n- c、在getter/setter方法中加入属性控制语句，对属性值的合法性进行判断。\r\n\r\n**补充：** 既然通过getter/setter方法来进行读取和修改，那与直接对属性进行操作有什么区别？\r\n\r\n答： 在实际场景中，我们通常会在setter方法对属性赋值过程中，进行其他的一些操作（如鉴权控制、日志记录、参数验证等），而直接对属性进行修改是无法做到的。\r\n\r\n```java\r\nclass People{\r\n    private int age;\r\n\r\n    public void setAge(int age){\r\n        //...其它逻辑\r\n        this.age = age;\r\n    }\r\n\r\n     public int getAge(){\r\n        //...其它逻辑\r\n        return age;\r\n    }\r\n\r\n    public void doWork(){\r\n        //做一些事\r\n    }\r\n}\r\n```\r\n\r\n**继承**\r\n\r\n继承是类与类的一种关系，例如：动物和狗的关系，动物是父类(或基类)，狗是子类(或派生类)。要注意的是，在Java中的继承是**单继承**，也就是说一个儿子只能有一个爸爸，一个子类只允许有一个父类。\r\n\r\n使用继承的优势在于，子类拥有父类的所有属性和方法(private除外)，并且子类可以复用父类的代码。\r\n\r\n使用继承，创建出具有逻辑等级结构的类体系，形成一个继承Tree，对后续的业务使用和代码复用可以带来非常大的便利。\r\n\r\n\r\n**多态**\r\n\r\n多态，是指运行时的实际对象类型，在同一个方法下产生不同的运行结果，使得同一个行为具有不同的表现形式。\r\n\r\n```java\r\n\r\nclass Student extends People{\r\n    public void doWork(){\r\n        //做作业\r\n    }\r\n}\r\n\r\nclass Worker extends People{\r\n    public void doWork(){\r\n        //上班\r\n    }\r\n}\r\n```\r\n\r\n**补充：**\r\n\r\n多态的体现在于子类继承父类后，不满足父类方法的基本要求，而进行“覆写”（override）完善。在这里，初学者朋友经常会将`override`与`overload`相互混淆。\r\n\r\n- **override：** 指的是重写父类方法，返回值类型、方法名、参数类型及个数，都与从父类继承的方法相同。\r\n\r\n- **overload：** 重载，指的是方法名相同，但参数类型**或**参数个数不同。\r\n\r\nJava的多态，指在编译层面无法确定最终调用的方法体，以**“覆写”（override）**为基础来实现面向对象的特性，在运行期由JVM进行动态绑定，调用合适的覆写方法体来执行。而**重载（overload）**则是编译器确定的方法调用，属于静态绑定。本质上二者毫不相干也毫无关联！！\r\n"},"qs/E":function(n,r,t){var e=t("zNUS");e.mock("/article/1","get",t("CNLw")),e.mock("/article/2","get",t("CNLw")),e.mock("/article/3","get",t("CNLw")),e.mock("/article/4","get",t("CNLw")),e.mock("/article/5","get",t("CNLw")),e.mock("/article/6","get",t("CNLw")),e.mock("/article/7","get",t("CNLw")),e.mock("/article/8","get",t("CNLw")),e.mock("/article/1ist","get",t("BR+q")),e.mock("/user/login","post",t("6tdw")),e.mock("/user/register","post",t("6tdw")),e.mock("/user/info","post",t("/wqO")),e.mock("/share/1ist","get",t("UalO")),e.mock("/share/1","get",t("CNLw")),e.mock("/share/2","get",t("TKgB"))},sUCb:function(n,r){},tmxJ:function(n,r,t){n.exports=t.p+"static/img/qrcompany.16c87ff.png"},tvR6:function(n,r){},vXzM:function(n,r){},zQrT:function(n,r,t){n.exports=t.p+"static/img/avatar.719ef3a.png"}},["NHnr"]);
//# sourceMappingURL=app.fd647a92a0a80e0c35b6.js.map